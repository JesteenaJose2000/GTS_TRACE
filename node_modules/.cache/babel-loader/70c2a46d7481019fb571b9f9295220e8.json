{"ast":null,"code":"var _jsxFileName = \"D:\\\\GTS_TRACE\\\\src\\\\components\\\\pages\\\\FarmAssets\\\\Livestock\\\\LsTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport livestock from \"./livestock.png\";\nimport paddock from \"../JobPopUp/services/paddock.png\";\nimport { Grid, Icon } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LsTable() {\n  _s();\n\n  const [img, setImg] = useState([livestock]);\n  const [type, setType] = useState({});\n  const lsType = [{\n    id: 1,\n    title: \"Cattle\"\n  }, {\n    id: 2,\n    title: \"Bulls\"\n  }, {\n    id: 3,\n    title: \"Sheep\"\n  }, {\n    id: 4,\n    title: \"Horses\"\n  }, {\n    id: 5,\n    title: \"Chickens\"\n  }, {\n    id: 6,\n    title: \"Pigs\"\n  }, {\n    id: 7,\n    title: \"Deer\"\n  }, {\n    id: 8,\n    title: \"Goats\"\n  }, {\n    id: 9,\n    title: \"Llamas\"\n  }, {\n    id: 10,\n    title: \"Bees\"\n  }];\n  const [data, setData] = useState([{\n    //icon:\"cattle\",\n    type: \"1\",\n    names: \"abc\",\n    number: \"123\",\n    notes: \"xyz\"\n  }, {\n    type: \"2\",\n    icon: \"sheep\",\n    names: \"kuedhwiuc\",\n    number: \"16343\",\n    notes: \"xykfz\"\n  }]);\n  const columns = [\n  /*{\r\n    title: \"Icon\",\r\n    field: \"icon\",\r\n    lookup: {\r\n      cattle: (\r\n        <Icon fontSize=\"large\" width=\"1000\" height=\"1000\" label=\"cattle\">\r\n          {\" \"}\r\n          <img src={livestock} className=\"img\" alt=\"cattle\"></img>{\" \"}\r\n        </Icon>\r\n      ), \r\n      sheep: (\r\n        <Icon fontSize=\"large\" width=\"1000\" height=\"1000\" label=\"cattle\">\r\n          {\" \"}\r\n          <img src={livestock} className=\"img\" alt=\"cattle\"></img>{\" \"}\r\n        </Icon>\r\n      ), \r\n      goat: (\r\n        <Icon fontSize=\"large\" width=\"1000\" height=\"1000\" label=\"cattle\">\r\n          {\" \"}\r\n          <img src={livestock} className=\"img\" alt=\"cattle\"></img>{\" \"}\r\n        </Icon>\r\n      ), \r\n      bulls: (\r\n        <Icon fontSize=\"large\" width=\"1000\" height=\"1000\" label=\"cattle\">\r\n          {\" \"}\r\n          <img src={livestock} className=\"img\" alt=\"cattle\"></img>{\" \"}\r\n        </Icon>\r\n      ), \r\n      horses: (\r\n        <Icon fontSize=\"large\" width=\"1000\" height=\"1000\" label=\"cattle\">\r\n          {\" \"}\r\n          <img src={livestock} className=\"img\" alt=\"cattle\"></img>{\" \"}\r\n        </Icon>\r\n      ), \r\n      pigs: (\r\n        <Icon fontSize=\"large\" width=\"1000\" height=\"1000\" label=\"cattle\">\r\n          {\" \"}\r\n          <img src={livestock} className=\"img\" alt=\"cattle\"></img>{\" \"}\r\n        </Icon>\r\n      ) \r\n  }\r\n  },*/\n  {\n    title: \"Type\",\n    field: \"type\",\n    lookup: type\n  }, {\n    title: \"Name\",\n    field: \"names\",\n    validate: rowData => {\n      if (rowData.names === undefined || rowData.names === \"\") {\n        return \"Required\";\n      }\n    }\n  }, {\n    title: \"Number\",\n    field: \"number\"\n  }, {\n    title: \"Notes\",\n    field: \"notes\"\n  }];\n  useEffect(() => {\n    const type = {};\n    lsType.map(row => type[row.id] = row.title);\n    setType(type);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Livestock\",\n      data: data,\n      columns: columns,\n      editable: {\n        onRowAdd: newRow => new Promise((resolve, reject) => {\n          setData([...data, newRow]);\n          setTimeout(() => resolve(), 500);\n        }),\n        onRowUpdate: (newRow, oldRow) => new Promise((resolve, reject) => {\n          const updatedData = [...data];\n          updatedData[(oldRow, data.id)] = newRow;\n          setData(updatedData);\n          setTimeout(() => resolve(), 500);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LsTable, \"wKzubdBr0uCbr3r2tqGORBCiJDg=\");\n\n_c = LsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"LsTable\");","map":{"version":3,"sources":["D:/GTS_TRACE/src/components/pages/FarmAssets/Livestock/LsTable.js"],"names":["React","useState","useEffect","MaterialTable","livestock","paddock","Grid","Icon","LsTable","img","setImg","type","setType","lsType","id","title","data","setData","names","number","notes","icon","columns","field","lookup","validate","rowData","undefined","map","row","onRowAdd","newRow","Promise","resolve","reject","setTimeout","onRowUpdate","oldRow","updatedData","onRowDelete","oldData","dataDelete","index","tableData","splice","actionsColumnIndex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;;AAKA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,CAACG,SAAD,CAAD,CAA9B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMY,MAAM,GAAC,CACX;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC;AAAZ,GADW,EAEX;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC;AAAZ,GAFW,EAGX;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC;AAAZ,GAHW,EAIX;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC;AAAZ,GAJW,EAKX;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC;AAAZ,GALW,EAMX;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC;AAAZ,GANW,EAOX;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC;AAAZ,GAPW,EAQX;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC;AAAZ,GARW,EASX;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC;AAAZ,GATW,EAUX;AAACD,IAAAA,EAAE,EAAC,EAAJ;AAAOC,IAAAA,KAAK,EAAC;AAAb,GAVW,CAAb;AAaA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,CAC/B;AACE;AACAU,IAAAA,IAAI,EAAE,GAFR;AAGEO,IAAAA,KAAK,EAAE,KAHT;AAKEC,IAAAA,MAAM,EAAE,KALV;AAMEC,IAAAA,KAAK,EAAE;AANT,GAD+B,EAS/B;AACET,IAAAA,IAAI,EAAE,GADR;AAEEU,IAAAA,IAAI,EAAE,OAFR;AAGEH,IAAAA,KAAK,EAAE,WAHT;AAKEC,IAAAA,MAAM,EAAE,OALV;AAMEC,IAAAA,KAAK,EAAE;AANT,GAT+B,CAAD,CAAhC;AAkBA,QAAME,OAAO,GAAG;AACd;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACEP,IAAAA,KAAK,EAAE,MADT;AAEEQ,IAAAA,KAAK,EAAE,MAFT;AAGEC,IAAAA,MAAM,EAACb;AAHT,GA3CgB,EAgDd;AACEI,IAAAA,KAAK,EAAE,MADT;AAEEQ,IAAAA,KAAK,EAAE,OAFT;AAGEE,IAAAA,QAAQ,EAAEC,OAAO,IAAG;AAAC,UAAGA,OAAO,CAACR,KAAR,KAAkBS,SAAlB,IAA+BD,OAAO,CAACR,KAAR,KAAiB,EAAnD,EAAsD;AAAC,eAAO,UAAP;AAAkB;AAAC;AAHjG,GAhDc,EAsDd;AACEH,IAAAA,KAAK,EAAE,QADT;AAEEQ,IAAAA,KAAK,EAAE;AAFT,GAtDc,EA0Dd;AACER,IAAAA,KAAK,EAAE,OADT;AAEEQ,IAAAA,KAAK,EAAE;AAFT,GA1Dc,CAAhB;AAgEArB,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMS,IAAI,GAAC,EAAX;AACAE,IAAAA,MAAM,CAACe,GAAP,CAAWC,GAAG,IAAElB,IAAI,CAACkB,GAAG,CAACf,EAAL,CAAJ,GAAae,GAAG,CAACd,KAAjC;AACAH,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GAJU,EAIT,EAJS,CAAT;AAMA,sBACE;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,IAAI,EAAEK,IAFR;AAGE,MAAA,OAAO,EAAEM,OAHX;AAIE,MAAA,QAAQ,EAAE;AACRQ,QAAAA,QAAQ,EAAGC,MAAD,IACR,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BjB,UAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUe,MAAV,CAAD,CAAP;AACAI,UAAAA,UAAU,CAAC,MAAMF,OAAO,EAAd,EAAkB,GAAlB,CAAV;AACD,SAHD,CAFM;AAMRG,QAAAA,WAAW,EAAE,CAACL,MAAD,EAASM,MAAT,KACX,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,gBAAMI,WAAW,GAAG,CAAC,GAAGtB,IAAJ,CAApB;AACAsB,UAAAA,WAAW,EAAED,MAAM,EAAErB,IAAI,CAACF,EAAf,EAAX,GAAiCiB,MAAjC;AACAd,UAAAA,OAAO,CAACqB,WAAD,CAAP;AACAH,UAAAA,UAAU,CAAC,MAAMF,OAAO,EAAd,EAAkB,GAAlB,CAAV;AACD,SALD,CAPM;AAaNM,QAAAA,WAAW,EAAEC,OAAO,IACpB,IAAIR,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,UAAAA,UAAU,CAAC,MAAM;AACf,kBAAMM,UAAU,GAAG,CAAC,GAAGzB,IAAJ,CAAnB;AACA,kBAAM0B,KAAK,GAAGF,OAAO,CAACG,SAAR,CAAkB7B,EAAhC;AACA2B,YAAAA,UAAU,CAACG,MAAX,CAAkBF,KAAlB,EAAyB,CAAzB;AACAzB,YAAAA,OAAO,CAAC,CAAC,GAAGwB,UAAJ,CAAD,CAAP;AAEAR,YAAAA,OAAO;AACR,WAPS,EAOP,IAPO,CAAV;AAQD,SATD;AAdM,OAJZ;AA6BE,MAAA,OAAO,EAAE;AACPY,QAAAA,kBAAkB,EAAE,CAAC;AADd;AA7BX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GA9IuBrC,O;;KAAAA,O","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport livestock from \"./livestock.png\";\r\nimport paddock from \"../JobPopUp/services/paddock.png\";\r\nimport { Grid, Icon } from \"@material-ui/core\";\r\n\r\n\r\n\r\n\r\nexport default function LsTable() {\r\n  const [img, setImg] = useState([livestock]);\r\n  const [type, setType] = useState({});\r\n\r\n  const lsType=[\r\n    {id:1,title:\"Cattle\"},\r\n    {id:2,title:\"Bulls\"},\r\n    {id:3,title:\"Sheep\"},\r\n    {id:4,title:\"Horses\"},\r\n    {id:5,title:\"Chickens\"},\r\n    {id:6,title:\"Pigs\"},\r\n    {id:7,title:\"Deer\"},\r\n    {id:8,title:\"Goats\"},\r\n    {id:9,title:\"Llamas\"},\r\n    {id:10,title:\"Bees\"}\r\n  ]\r\n\r\n  const [data, setData] = useState([\r\n    {\r\n      //icon:\"cattle\",\r\n      type: \"1\",\r\n      names: \"abc\",\r\n      \r\n      number: \"123\",\r\n      notes: \"xyz\",\r\n    },\r\n    {\r\n      type: \"2\",\r\n      icon: \"sheep\",\r\n      names: \"kuedhwiuc\",\r\n      \r\n      number: \"16343\",\r\n      notes: \"xykfz\",\r\n    },\r\n  ]);\r\n  const columns = [\r\n    /*{\r\n      title: \"Icon\",\r\n      field: \"icon\",\r\n      lookup: {\r\n        cattle: (\r\n          <Icon fontSize=\"large\" width=\"1000\" height=\"1000\" label=\"cattle\">\r\n            {\" \"}\r\n            <img src={livestock} className=\"img\" alt=\"cattle\"></img>{\" \"}\r\n          </Icon>\r\n        ), \r\n        sheep: (\r\n          <Icon fontSize=\"large\" width=\"1000\" height=\"1000\" label=\"cattle\">\r\n            {\" \"}\r\n            <img src={livestock} className=\"img\" alt=\"cattle\"></img>{\" \"}\r\n          </Icon>\r\n        ), \r\n        goat: (\r\n          <Icon fontSize=\"large\" width=\"1000\" height=\"1000\" label=\"cattle\">\r\n            {\" \"}\r\n            <img src={livestock} className=\"img\" alt=\"cattle\"></img>{\" \"}\r\n          </Icon>\r\n        ), \r\n        bulls: (\r\n          <Icon fontSize=\"large\" width=\"1000\" height=\"1000\" label=\"cattle\">\r\n            {\" \"}\r\n            <img src={livestock} className=\"img\" alt=\"cattle\"></img>{\" \"}\r\n          </Icon>\r\n        ), \r\n        horses: (\r\n          <Icon fontSize=\"large\" width=\"1000\" height=\"1000\" label=\"cattle\">\r\n            {\" \"}\r\n            <img src={livestock} className=\"img\" alt=\"cattle\"></img>{\" \"}\r\n          </Icon>\r\n        ), \r\n        pigs: (\r\n          <Icon fontSize=\"large\" width=\"1000\" height=\"1000\" label=\"cattle\">\r\n            {\" \"}\r\n            <img src={livestock} className=\"img\" alt=\"cattle\"></img>{\" \"}\r\n          </Icon>\r\n        ) \r\n    }\r\n  },*/\r\n  {\r\n    title: \"Type\",\r\n    field: \"type\",\r\n    lookup:type\r\n  },\r\n    {\r\n      title: \"Name\",\r\n      field: \"names\",\r\n      validate: rowData =>{if(rowData.names === undefined || rowData.names ===\"\"){return \"Required\"}}\r\n    },\r\n   \r\n    {\r\n      title: \"Number\",\r\n      field: \"number\",\r\n    },\r\n    {\r\n      title: \"Notes\",\r\n      field: \"notes\",\r\n    },\r\n   \r\n  ];\r\n  useEffect(()=>{\r\n    const type={}\r\n    lsType.map(row=>type[row.id]=row.title)\r\n    setType(type)\r\n},[])\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        title=\"Livestock\"\r\n        data={data}\r\n        columns={columns}\r\n        editable={{\r\n          onRowAdd: (newRow) =>\r\n            new Promise((resolve, reject) => {\r\n              setData([...data, newRow]);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n          onRowUpdate: (newRow, oldRow) =>\r\n            new Promise((resolve, reject) => {\r\n              const updatedData = [...data];\r\n              updatedData[(oldRow, data.id)] = newRow;\r\n              setData(updatedData);\r\n              setTimeout(() => resolve(), 500);\r\n            }),\r\n            onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setData([...dataDelete]);\r\n  \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}