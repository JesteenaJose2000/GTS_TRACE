[{"D:\\GTS_TRACE\\src\\index.js":"1","D:\\GTS_TRACE\\src\\App.js":"2","D:\\GTS_TRACE\\src\\reportWebVitals.js":"3","D:\\GTS_TRACE\\src\\Routing.js":"4","D:\\GTS_TRACE\\src\\components\\pages\\Dashboard.js":"5","D:\\GTS_TRACE\\src\\components\\pages\\CustomReports.js":"6","D:\\GTS_TRACE\\src\\components\\pages\\Calender.js":"7","D:\\GTS_TRACE\\src\\components\\pages\\Activities\\Planting.js":"8","D:\\GTS_TRACE\\src\\components\\pages\\Activities\\Activityreports.js":"9","D:\\GTS_TRACE\\src\\components\\pages\\Activities\\Grazing.js":"10","D:\\GTS_TRACE\\src\\components\\pages\\Activities\\Spreading.js":"11","D:\\GTS_TRACE\\src\\components\\layout.js":"12","D:\\GTS_TRACE\\src\\components\\pages\\Activities\\Irrigation.js":"13","D:\\GTS_TRACE\\src\\components\\pages\\Activities\\Spraylogs.js":"14","D:\\GTS_TRACE\\src\\components\\pages\\Activities\\Maintainance.js":"15","D:\\GTS_TRACE\\src\\components\\pages\\Job\\job.js":"16","D:\\GTS_TRACE\\src\\components\\pages\\Activities\\Harvest.js":"17","D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\farms.js":"18","D:\\GTS_TRACE\\src\\components\\Navbar\\Navbar.js":"19","D:\\GTS_TRACE\\src\\components\\HeaderFooter\\Header.js":"20","D:\\GTS_TRACE\\src\\components\\Footer\\footer.js":"21","D:\\GTS_TRACE\\src\\History.js":"22","D:\\GTS_TRACE\\src\\components\\pages\\Job\\icondisplay.js":"23","D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\farmTable.js":"24","D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\JobMain.js":"25","D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\FarmListPopup\\farmpopup.js":"26","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\JobMain.js":"27","D:\\GTS_TRACE\\src\\components\\Navbar\\PersonalSubmenu.js":"28","D:\\GTS_TRACE\\src\\components\\Navbar\\activity_submenu.js":"29","D:\\GTS_TRACE\\src\\components\\Navbar\\inventory_submenu.js":"30","D:\\GTS_TRACE\\src\\components\\Navbar\\assets_submenu.js":"31","D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\tableDetails.js":"32","D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\JobDialog.js":"33","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\JobDialog.js":"34","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\context\\SampleContext.js":"35","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\Jobnew.js":"36","D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\context\\SampleContext.js":"37","D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\Jobedit.js":"38","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\Category.js":"39","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\MyDatePicker.js":"40","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\SelectCheck.js":"41","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\Select.js":"42","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\services\\JobAssign.js":"43","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\Input.js":"44","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\Useform.js":"45","D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\MyDatePicker.js":"46","D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\Category.js":"47","D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\SelectCheck.js":"48","D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\Select.js":"49","D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\Input.js":"50","D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\Useform.js":"51","D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\services\\JobAssign.js":"52","D:\\GTS_TRACE\\src\\Data\\farmData.js":"53","D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\PaddockTable.js":"54","D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\FueltankTable.js":"55","D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\SiloTable.js":"56","D:\\GTS_TRACE\\src\\Data\\EquipmentData.js":"57","D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Equipments\\Equipments.js":"58","D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Chemicals\\Chemical.js":"59","D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Fertiliser\\FertiliserTable.js":"60"},{"size":542,"mtime":1635790260000,"results":"61","hashOfConfig":"62"},{"size":2657,"mtime":1637594432596,"results":"63","hashOfConfig":"62"},{"size":362,"mtime":1635790260000,"results":"64","hashOfConfig":"62"},{"size":479,"mtime":1635790260000,"results":"65","hashOfConfig":"62"},{"size":176,"mtime":1635790260000,"results":"66","hashOfConfig":"62"},{"size":206,"mtime":1635790260000,"results":"67","hashOfConfig":"62"},{"size":174,"mtime":1635790260000,"results":"68","hashOfConfig":"62"},{"size":170,"mtime":1635790260000,"results":"69","hashOfConfig":"62"},{"size":189,"mtime":1635790260000,"results":"70","hashOfConfig":"62"},{"size":172,"mtime":1635790260000,"results":"71","hashOfConfig":"62"},{"size":176,"mtime":1635790260000,"results":"72","hashOfConfig":"62"},{"size":1182,"mtime":1635790260000,"results":"73","hashOfConfig":"62"},{"size":174,"mtime":1635790260000,"results":"74","hashOfConfig":"62"},{"size":178,"mtime":1635790260000,"results":"75","hashOfConfig":"62"},{"size":178,"mtime":1635790260000,"results":"76","hashOfConfig":"62"},{"size":10329,"mtime":1635790260000,"results":"77","hashOfConfig":"62"},{"size":172,"mtime":1635790260000,"results":"78","hashOfConfig":"62"},{"size":2155,"mtime":1637595071955,"results":"79","hashOfConfig":"62"},{"size":5074,"mtime":1635790260000,"results":"80","hashOfConfig":"62"},{"size":766,"mtime":1635790260000,"results":"81","hashOfConfig":"62"},{"size":1583,"mtime":1635790260000,"results":"82","hashOfConfig":"62"},{"size":84,"mtime":1635790260000,"results":"83","hashOfConfig":"62"},{"size":961,"mtime":1635790260000,"results":"84","hashOfConfig":"62"},{"size":1032,"mtime":1637481396522,"results":"85","hashOfConfig":"62"},{"size":459,"mtime":1635790260000,"results":"86","hashOfConfig":"62"},{"size":6913,"mtime":1637418696076,"results":"87","hashOfConfig":"62"},{"size":459,"mtime":1635790260000,"results":"88","hashOfConfig":"62"},{"size":492,"mtime":1635790260000,"results":"89","hashOfConfig":"62"},{"size":1809,"mtime":1635790260000,"results":"90","hashOfConfig":"62"},{"size":1390,"mtime":1635790260000,"results":"91","hashOfConfig":"62"},{"size":2133,"mtime":1637594357699,"results":"92","hashOfConfig":"62"},{"size":480,"mtime":1637483145305,"results":"93","hashOfConfig":"62"},{"size":1549,"mtime":1635790260000,"results":"94","hashOfConfig":"62"},{"size":1510,"mtime":1635790260000,"results":"95","hashOfConfig":"62"},{"size":430,"mtime":1635790260000,"results":"96","hashOfConfig":"62"},{"size":7787,"mtime":1635790260000,"results":"97","hashOfConfig":"62"},{"size":430,"mtime":1635790260000,"results":"98","hashOfConfig":"62"},{"size":8379,"mtime":1635790260000,"results":"99","hashOfConfig":"62"},{"size":6408,"mtime":1635790260000,"results":"100","hashOfConfig":"62"},{"size":887,"mtime":1635790260000,"results":"101","hashOfConfig":"62"},{"size":1551,"mtime":1635790260000,"results":"102","hashOfConfig":"62"},{"size":1408,"mtime":1635790260000,"results":"103","hashOfConfig":"62"},{"size":1827,"mtime":1635790260000,"results":"104","hashOfConfig":"62"},{"size":422,"mtime":1635790260000,"results":"105","hashOfConfig":"62"},{"size":830,"mtime":1635790260000,"results":"106","hashOfConfig":"62"},{"size":887,"mtime":1635790260000,"results":"107","hashOfConfig":"62"},{"size":6408,"mtime":1635790260000,"results":"108","hashOfConfig":"62"},{"size":1566,"mtime":1635790260000,"results":"109","hashOfConfig":"62"},{"size":1407,"mtime":1635790260000,"results":"110","hashOfConfig":"62"},{"size":414,"mtime":1635790260000,"results":"111","hashOfConfig":"62"},{"size":830,"mtime":1635790260000,"results":"112","hashOfConfig":"62"},{"size":1945,"mtime":1635790260000,"results":"113","hashOfConfig":"62"},{"size":136,"mtime":1637423700081,"results":"114","hashOfConfig":"62"},{"size":3409,"mtime":1637594656444,"results":"115","hashOfConfig":"62"},{"size":2996,"mtime":1637594662657,"results":"116","hashOfConfig":"62"},{"size":3225,"mtime":1637594650197,"results":"117","hashOfConfig":"62"},{"size":1174,"mtime":1637582053179,"results":"118","hashOfConfig":"62"},{"size":2893,"mtime":1637594826898,"results":"119","hashOfConfig":"62"},{"size":4079,"mtime":1637594871012,"results":"120","hashOfConfig":"62"},{"size":2902,"mtime":1637594805701,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"agnwp1",{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"124"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"124"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"124"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"124"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"124"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"124"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"124"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"124"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"124"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"124"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"124"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"124"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"124"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"124"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"124"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\GTS_TRACE\\src\\index.js",[],["264","265"],"D:\\GTS_TRACE\\src\\App.js",["266"],"import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Routing from \"./Routing\";\nimport Layout from \"./components/layout\";\nimport Dashboard from \"./components/pages/Dashboard\";\nimport Jobs from \"./components/pages/Job/job\";\nimport Farms from \"./components/pages/FarmAssets/Farms/farms\";\nimport Fertiliser from \"./components/pages/FarmAssets/Fertiliser/FertiliserTable\";\nimport Equipments from \"./components/pages/FarmAssets/Equipments/Equipments\";\nimport Chemicals from \"./components/pages/FarmAssets/Chemicals/Chemical\";\nimport CustomReports from \"./components/pages/CustomReports\";\nimport Calender from \"./components/pages/Calender\";\nimport Activityreports from \"./components/pages/Activities/Activityreports\";\nimport Grazing from \"./components/pages/Activities/Grazing\";\nimport Harvest from \"./components/pages/Activities/Harvest\";\nimport Irrigation from \"./components/pages/Activities/Irrigation\";\nimport Maintainance from \"./components/pages/Activities/Maintainance\";\nimport Planting from \"./components/pages/Activities/Planting\";\nimport Spraylogs from \"./components/pages/Activities/Spraylogs\";\nimport Spreading from \"./components/pages/Activities/Spreading\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router >\n        <Layout>        \n          <Switch>\n            <Route path=\"/\" exact>\n              <Dashboard/> \n            </Route>\n            <Route path=\"/Jobs\" exact component={Jobs}></Route>\n            <Route path=\"/Farms\" exact component={Farms}></Route>\n            <Route path=\"/Fertiliser\" exact component={Fertiliser}></Route>\n            <Route path=\"/Equipments\" exact component={Equipments}></Route>\n            <Route path=\"/Chemicals\" exact component={Chemicals}></Route>\n            <Route path=\"/Customreports\" exact component={CustomReports}></Route>\n            <Route path=\"/Calender\" exact component={Calender}></Route>\n            <Route path=\"/Activityreports\" exact component={Activityreports}></Route>\n            <Route path=\"/Grazing\" exact component={Grazing}></Route>\n            <Route path=\"/Harvest\" exact component={Harvest}></Route>\n            <Route path=\"/Maintainance\" exact component={Maintainance}></Route>\n            <Route path=\"/Planting\" exact component={Planting}></Route>\n            <Route path=\"/Spraylogs\" exact component={Spraylogs}></Route>\n            <Route path=\"/Spreading\" exact component={Spreading}></Route>\n            <Route path=\"/Irrigation\" exact component={Irrigation}></Route>\n          </Switch>\n        </Layout>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","D:\\GTS_TRACE\\src\\reportWebVitals.js",[],"D:\\GTS_TRACE\\src\\Routing.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\Dashboard.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\CustomReports.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\Calender.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\Activities\\Planting.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\Activities\\Activityreports.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\Activities\\Grazing.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\Activities\\Spreading.js",[],"D:\\GTS_TRACE\\src\\components\\layout.js",["267"],"import styled from \"styled-components\";\nimport React from \"react\";\nimport Navbar from \"./Navbar/Navbar.js\";\nimport Header from \"./HeaderFooter/Header.js\";\nimport Footersection from \"./Footer/footer.js\";\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: min-content 1fr;\n  grid-template-rows: min-content 1fr min-content;\n  `;\n\nconst SideBar = styled.nav`\n  background-color: #263238;\n  grid-column: 1/2;\n  grid-row: 1/4;\n  \n  position: sticky;\n`;\n\nconst HeaderStyle = styled.header`\n  background-color: gainsboro;\n  box-shadow: 0 2px 6px #0000008a;\n  height: 64px;\n  grid-column: 2/3;\n  grid-row: 1/2;\n  position: sticky;\n  top:0;\n`;\n\nconst Footer = styled.footer`\n  background-color: gainsboro;\n  height: 40px;\n  grid-column: 2/3;\n  grid-row: 3/4;\n  position: sticky;\n  bottom: 0;\n`;\n\nconst Main = styled.main`\n  grid-column: 2/3;\n  grid-row: 2/2;\n  \n  color: white;\n`;\n\nfunction layout({ children }) {\n  return (\n    <Grid>\n      <Footersection/>\n      <SideBar>\n        <Navbar />\n      </SideBar>\n      <HeaderStyle>\n        <Header/>\n\n      </HeaderStyle>\n      \n      <Main>\n          {children}\n      </Main>\n     \n    </Grid>\n  );\n}\n\nexport default layout;\n","D:\\GTS_TRACE\\src\\components\\pages\\Activities\\Irrigation.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\Activities\\Spraylogs.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\Activities\\Maintainance.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\Job\\job.js",["268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293"],"import React, { useState } from 'react';\nimport GearIcon from 'mdi-react/GearIcon';\nimport IconDisplay from './icondisplay';\nimport Editjob from './JobEdit/JobPopUp/JobMain';\nimport Addjob from './NewJob/JobPopUp/JobMain';\nimport '../Pages.css';\nimport tableData from '../../../Data/tableData.json';\nimport { Icon, Label, Menu, Table, Modal, Header, Button, Checkbox, Grid  } from 'semantic-ui-react';\nimport _ from 'lodash';\n\nexport default function Job() {\n  \n       var flag=0, value='All', value1, display=0;\n     \n    \n    const [open, setOpen] = useState(false)\n    const [isChecked, setChecked] = useState(true);\n    const [selectValue, setselectValue] = useState('');\n    const [selectValue1, setselectValue1] = useState('');\n    const [searchValue, setsearchValue] = useState('');\n\n  /*-----------------------------------------options for second dropdown-----------*/\n    \n    const Category = [\"None\", \"Equipment\", \"Paddock\", \"Fuel Tank\", \"Silo\", \"Livestock\"];\n    const Priority = [\"Low\", \"Normal\", \"High\", \"Safety\"];\n    const Status = [\"Raised\", \"Raised and Assigned\", \"In Progress\", \"On Hold\", \"Completed\"];\n    \n    let type = null;\n    let options = null;\n  \n\nif (selectValue === \"Priority\") \n    type = Priority;\nif (selectValue === \"Category\") \n    type = Category;\nif (selectValue === \"Status\") \n    type = Status;\n\n  \n \n/*-----------------------------------------no records found message-----------*/\nfunction ErrorMessage(props) {\n  const Display = props.Display;\n      \n       if(!Display)\n       { \n        return (\n           <>\n         <p style={{\"text-align\": \"center\", \"color\": \"grey\", \"padding\": \"20px\", \"align-content\": \"bottom\"}}> No record found</p> \n          \n           </>\n           );\n       }\n       \n       else{\n           return(\n           <> </>\n           );\n       }\n}\n   \n if(selectValue){\n      \n      flag=1;\n     value=selectValue;\n     if(selectValue==\"Status\")\n         value1=\"Raised\";\n     if(selectValue==\"Priority\")\n         value1=\"Low\";\n     if(selectValue==\"Category\")\n         value1=\"None\";\n }\n    if(selectValue1){\n    value1=selectValue1; }\n    \n  /*-----------------------------------------second dropdown displaying-----------*/  \nfunction HandleDropdown(props) {\n  const Value = props.Value;\n        if (type) {\n            options = type.map((el) => <option value={el} key={el}>{el}</option>\n                      );\n        }\n    switch (Value) {\n    case 'Priority':\n    case 'Status':\n    case 'Category':\n            return (<>\n                          \n                <div class=\"inputfield\">\n                    <div class=\"custom_select\"> \n                        <select value={selectValue1} onChange={(e) => setselectValue1(e.target.value)}>              \n                        {options}\n                        </select>\n                    </div>\n                </div>\n                </>\n                )\n     case 'Asset':\n            return (\n                <>\n                <div class=\"inputfield\">\n        \n                  <input onChange={(e)=>setsearchValue(e.target.value)} value={searchValue} class='input_value' type=\"text\" placeholder=\"Search...\" />\n                </div>\n                </>\n                )\n    case 'Description':\n           return  (<>\n                          \n                    <div class=\"inputfield\">\n         \n                     <input onChange={(e)=>setsearchValue(e.target.value)} value={searchValue} class='input_value' type=\"text\" placeholder=\"Search...\" />\n                    </div>\n  \n                    </>\n                    )\n               default:\n                 return (<> \n                         </>\n                        )\n        \n}\n}\n\n/*-----------------------------------------table fitering using dropdown and completed button-----------*/\nconst items = tableData.filter((data)=>{\n\n    if(!isChecked && data.status == \"Completed\")// checking completed button enabled or disabled\n        return \n   \n    \n    if(flag)  //if dropdown filter is selected\n   {    if(selectValue==\"Status\" && data.status == value1)   \n          { display=1\n              return data}\n        else if(selectValue==\"Priority\" && data.priority == value1)   \n           { display=1\n              return data}\n        else if(selectValue==\"Category\" && data.category == value1)   \n          { display=1\n              return data}\n        else if(selectValue==\"All\" || selectValue==\"Description\" || selectValue==\"Asset\")   \n          { \n              if(selectValue==\"Description\"){\n                if(searchValue==\"\"){\n                    display=1\n                    return data\n                }\n                else if(data.description.toLowerCase().includes(searchValue.toLowerCase()) ){ //searching using searchbox\n                 \n                    display=1\n                    return data\n                }\n              }\n              else if(selectValue==\"Asset\"){\n                if(searchValue==\"\"){\n                    display=1\n                    return data\n                }\n                  else if(data.asset.toLowerCase().includes(searchValue.toLowerCase())){ //searching using searchbox\n                 \n                    display=1\n                    return data\n                  }\n             }\n              else{\n                  display=1\n                  return data\n              }\n             \n          \n          }\n    \n        else \n            return\n   }\n   else {\n       display=1\n       return data\n   }\n       \n      \n    }).map(({status, priority, category, asset, description,duedate,lastupdate }) => (\n         \n          <Table.Row key={description}>\n       \n            <Table.Cell> <IconDisplay dataValue={status} /></Table.Cell>\n            <Table.Cell> <IconDisplay dataValue={priority} /></Table.Cell>\n            <Table.Cell>{description}</Table.Cell>\n            <Table.Cell>{category}</Table.Cell>\n            <Table.Cell>{asset}</Table.Cell>\n            <Table.Cell>{duedate}</Table.Cell>\n            <Table.Cell>{lastupdate}</Table.Cell>\n            <Table.Cell> <Editjob style={{\"padding\": \"0px\", \"margin\": \"0px\"}}/></Table.Cell>\n       \n          </Table.Row>      \n   ))\n   \n   \n  return(\n\n<div  className= \"table-size\">\n    \n  <div className= \"subheader\">\n           \n      <h1 style={{\"color\": \"black\", \"margin-bottom\":\"0px\"}}>Jobs </h1><span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\n      \n      \n   {/*--------------------------------------------Completed jobs popup----------------------*/}\n      \n    <Modal style={{ \"height\": \"35%\", \"width\": \"30%\",\"position\": \"relative\", \"background-color\": \"rgb(0 0 0 / 62%)\" }}\n      centered={true}\n      open={open}\n      trigger={<GearIcon style={{\"cursor\":\"pointer\", \"color\": \"black\"}}/>\n      }\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n    >\n      <Header icon='setting' content='Settings' />\n      <Modal.Content>\n       <Checkbox toggle onClick={() => setChecked(!isChecked)} \n        checked={isChecked}/>\n            \n            <span style={{\"color\":\"grey\",\"font-size\":\"20px\"}}>  Show Completed </span>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color='red' onClick={() => setOpen(false)}>\n          <Icon name='remove'  /> Close\n        </Button>\n        \n      </Modal.Actions>\n    </Modal>   \n      \n\n      <div className=\"spacer\"></div>\n   \n{/*--------------------------------------------First Dropdown----------------------*/}\n        <Grid.Column >\n            <div class=\"inputfield\">\n                <div class=\"custom_select\">  \n                    <select onChange={(e) => {setselectValue(e.target.value);\n                         \n                       setselectValue1(e.target.value==\"Status\"?\"Raised\":\n                         (e.target.value==\"Priority\"?\"Low\":\n                         (e.target.value==\"Category\"?\"None\":\" \")));\n                         \n                       }}>\n         \n                    <option value=\"All\">All</option>\n                    <option value=\"Status\">Status</option>\n                    <option value=\"Priority\">Priority</option>\n                    <option value=\"Description\">Description</option>\n                    <option value=\"Asset\">Asset</option>\n                    <option value=\"Category\">Category</option>\n                </select>\n            </div>\n            </div>\n        </Grid.Column>\n{/*--------------------------------------------Second Dropdown----------------------*/}\n        <Grid.Column style={{\"margin-left\": \"10px\", \"margin-right\": \"20px\"}}>\n               \n                <HandleDropdown Value={selectValue}/>\n        </Grid.Column>\n \n{/*--------------------------------------------Add job section----------------------*/}    \n<Addjob/> \n                    \n</div>\n\n\n{/* --------------------------------------------table displaying-------------------------------------------------------------------- */}\n\n<Table sortable singleLine selectable color=\"green\" key=\"green\" >\n      <Table.Header >\n        <Table.Row >\n                <Table.HeaderCell >Status </Table.HeaderCell>\n                <Table.HeaderCell>Priority</Table.HeaderCell>\n                <Table.HeaderCell >Description</Table.HeaderCell>\n                <Table.HeaderCell>Category</Table.HeaderCell>\n                <Table.HeaderCell>Asset</Table.HeaderCell>\n                <Table.HeaderCell>Due date</Table.HeaderCell>\n                <Table.HeaderCell>Last Update</Table.HeaderCell>\n                <Table.HeaderCell>Actions</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body> {items} </Table.Body>\n <Table.HeaderCell colSpan='8'>\n     \n     <ErrorMessage Display={display}/>\n        \n     </Table.HeaderCell>\n    <Table.Footer>\n      <Table.Row>\n        <Table.HeaderCell colSpan='8'>\n          <Menu floated='right' pagination>\n            <Menu.Item as='a' icon>\n              <Icon name='chevron left' />\n            </Menu.Item>\n            <Menu.Item as='a'>1</Menu.Item>\n            <Menu.Item as='a'>2</Menu.Item>\n            <Menu.Item as='a'>3</Menu.Item>\n            <Menu.Item as='a'>4</Menu.Item>\n            <Menu.Item as='a' icon>\n              <Icon name='chevron right' />\n            </Menu.Item>\n          </Menu>\n        </Table.HeaderCell>\n      </Table.Row>\n    </Table.Footer>\n      \n  </Table>\n  \n \n\n</div>\n\n      );\n}\n\n\n    \n ","D:\\GTS_TRACE\\src\\components\\pages\\Activities\\Harvest.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\farms.js",[],"D:\\GTS_TRACE\\src\\components\\Navbar\\Navbar.js",[],"D:\\GTS_TRACE\\src\\components\\HeaderFooter\\Header.js",["294"],"import React from 'react'\nimport farmsimple from \"../../images/logo.jpg\";\nimport \"./Headerfooter.css\";\n\nexport default function Header() {\n    return (\n        <div className=\"header\">\n           \n                <img className=\"logo\" src={farmsimple} width=\"100\" height=\"50\"/> \n            \n         <div class=\"logoName\" style={{\"color\": \"rgb(79, 79, 79)\"}}><b>GFS</b> Trace</div>\n        <div className=\"spacer\"></div>\n          <span className=\"userDetails\" >Align Agith </span> | \n      <span className=\"userDetails\" style={{\"color\": \"green\", \"float\": \"right\"}}> Owner</span>\n        \n                \n               <button className=\"logout\" >\n                   LOGOUT\n               </button>\n               \n           \n            \n        </div>\n    )\n}\n","D:\\GTS_TRACE\\src\\components\\Footer\\footer.js",["295","296","297","298"],"\nimport React from 'react';\nimport WebIcon from 'mdi-react/WebIcon';\nimport YoutubeIcon from 'mdi-react/YoutubeIcon';\nimport \"./footer.css\";\nimport FacebookIcon from 'mdi-react/FacebookIcon';\nimport TwitterIcon from 'mdi-react/TwitterIcon';\n//import EyeIcon from 'mdi-react/EyeIcon';\n\nexport default function Footer() {\n  return(\n   \n  <footer className=\"v-footer\" data-booted=\"true\">\n   {  /*  <span small=\"\" style={{\"margin-left\": \"50px\"}}>Icons by{' '} \n  <a target=\"_blank\" href=\"https://icons8.com/\">Icons8</a>\n      </span>*/}\n  \n        <div className=\"spacer\"></div>\n       \n      <div style={{\"margin-right\": \"20px\"}}>\n    <a href=\"\" target=\"_blank\" className=\"mr-1 v-btn-footer v-btn--icon v-btn--round theme--light v-size--small\">\n      <span className=\"v-btn__content\"><WebIcon size={24} /></span></a>\n      \n     <a href=\"\" target=\"_blank\" className=\"mr-1 v-btn-footer v-btn--icon v-btn--round theme--light v-size--small\"><span className=\"v-btn__content\"><FacebookIcon size={24} /></span></a>\n      \n      <a href=\"\" target=\"_blank\" className=\"mr-1 v-btn-footer v-btn--icon v-btn--round theme--light v-size--small\"><span className=\"v-btn__content\"><TwitterIcon size={24} /></span></a>\n      \n      <a href=\"\" target=\"_blank\" className=\"mr-1 v-btn-footer v-btn--icon v-btn--round theme--light v-size--small\"><span className=\"v-btn__content\"><YoutubeIcon size={24} /></span></a>\n      \n      <span style={{\"margin-left\": \"10px\", \"align-items\": \"center\", \"color\": \"rgb(79, 79, 79)\", \"top\": \"0\"}}> © 2021 \n    \n      </span>\n    </div>\n     \n   </footer>\n     \n      );\n}\n\n","D:\\GTS_TRACE\\src\\History.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\Job\\icondisplay.js",["299"],"import React from 'react';\nimport {Icon} from 'semantic-ui-react';\n\nexport default function IconDisplay(props) {\n  const dataValue = props.dataValue;\n    switch (dataValue) {\n    case 'Raised':\n            return <Icon name='blue circle outline' size='large'/>\n    case 'Completed':\n            return <Icon name='green circle' size='large'/>\n    case 'Raised and Assigned':\n            return <Icon name='blue circle'size='large'/>\n    case 'On Hold':\n           return <Icon name='red circle'size='large'/>\n    case 'In Progress':\n           return <Icon name='orange circle'size='large'/>\n    case 'Low':\n           return <Icon name='angle down'size='large'/>\n    case 'High':\n            return <Icon name='red angle double up'size='large'/>\n    case 'Normal':\n            return <Icon name='blue angle up'size='large'/>\n    case 'Safety':\n           return <Icon name='orange exclamation triangle'size='large'/>\n               \n             \n        \n}\n}\n","D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\farmTable.js",["300","301"],"import React, {useState} from 'react'\nimport { Segment } from 'semantic-ui-react';\nimport {Menu} from 'semantic-ui-react';\nimport TableDetails from './tableDetails'\n\n\nexport default function FarmTable()  {\n    const [state, setState] = React.useState(\"PADDOCK\"); \n\n      return (\n        <div>\n          <Menu pointing>\n            <Menu.Item\n              name='PADDOCK'\n              active={state === 'PADDOCK'}\n             color=\"green\"\n             onClick={() => setState(\"PADDOCK\")}\n            />\n            <Menu.Item\n              name='FUEL TANKS'\n              active={state === 'FUEL TANKS'}\n              onClick={() => setState(\"FUEL TANKS\")}\n              color=\"green\"\n            />\n            <Menu.Item\n              name='SILOS'\n              active={state === 'SILOS'}\n              onClick={() => setState(\"SILOS\")}\n              color=\"green\"\n            />\n          \n           \n          </Menu>\n          \n         <TableDetails dataValue={state}/>\n      <br></br>\n         \n        </div>\n    );\n  }\n","D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\JobMain.js",["302","303"],"import { makeStyles, Paper } from '@material-ui/core'\nimport React from 'react'\nimport JobDialog from './JobDialog';\n\nconst useStyles=makeStyles(theme=>({\n    pageContent:{\n        margin:theme.spacing(5),\n        padding:theme.spacing(3)\n    }\n}))\nfunction JobMain() {\n    const classes=useStyles();\n    return (\n        <div>\n            <>\n           \n                <JobDialog/>\n           \n            </>\n        </div>\n    )\n}\n\nexport default JobMain\n","D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\FarmListPopup\\farmpopup.js",["304","305"],"import React, {useState} from 'react'\nimport { Button, Checkbox, Icon, Grid, Modal, Input } from 'semantic-ui-react'\nimport GearIcon from 'mdi-react/GearIcon';\nimport farm from \"../../../../../Data/farmData\";\n\nexport default function Farmpopup(props) {\n  const Value = props.Value;\n  const [firstOpen, setFirstOpen] = React.useState(false)\n  const [addOpen, setAddOpen] = React.useState(false)\n  const [editOpen, setEditOpen] = React.useState(false)\n  const [deleteOpen, setDeleteOpen] = React.useState(false)\n  const [state, setState] = useState(' '); \n  \n  const [farm,setfarm]=useState([\n    {value:\"Farm1\"},\n    {value:\"Farm2\"},\n    \n])\nconst addRow=()=>{\n  let newFarm={value:{state}}\n  setfarm([...farm,newFarm])\n  alert(\"New farm added\");\n}\nconst editRow=()=>{\n \n  alert(\"Farm edited\");\n}\nconst deleteRow=()=>{\n \n  alert(\"Farm deleted\");\n}\n  return (\n    <>\n     \n      <GearIcon onClick={() => setFirstOpen(true)} style={{\"cursor\":\"pointer\", \"color\": \"black\"}}/>\n      <Modal style={{ \"height\": \"35%\", \"width\": \"25%\", \"background-color\": \"rgb(0 0 0 / 62%)\" }}\n        onClose={() => setFirstOpen(false)}\n        onOpen={() => setFirstOpen(true)}\n        open={firstOpen}\n      >\n        <Modal.Header>Farm Options</Modal.Header>\n        <Modal.Content>\n        <div  style={{\"margin-left\":\"35px\"}}>\n          <Modal.Description>\n          \n          <Button basic color='green' onClick={() => setAddOpen(true)}>\n          <Icon name='plus' />\n            Add Farm \n          </Button>\n          \n          </Modal.Description>\n         \n         \n          <Modal.Description style={{\"margin-top\":\"10px\"}}>\n          <Button basic color='blue' onClick={() => {setEditOpen(true);\n        setState(Value);}}>\n          <Icon name='pencil' />\n            Edit Farm\n          </Button>\n          \n          </Modal.Description>\n         \n         \n          <Modal.Description style={{\"margin-top\":\"10px\"}}>\n          <Button basic color='red' onClick={() => setDeleteOpen(true)\n          }>\n          <Icon name='minus' />\n            Delete Farm\n          </Button>\n          \n          </Modal.Description>\n         </div>\n        </Modal.Content>\n        \n        <Modal.Actions>\n        <Button color='red' onClick={() => setFirstOpen(false)}>\n          <Icon name='remove'  /> Cancel\n        </Button>\n          \n        </Modal.Actions>\n            \n      <Modal\n          onClose={() => setAddOpen(false)}\n          open={addOpen}\n          size='small'\n          style={{ \"height\": \"35%\", \"width\": \"35%\" }}\n        >\n          <Modal.Header>New Item</Modal.Header>\n          <Modal.Content>\n          <Input fluid iconPosition='left' placeholder='Name'>\n              \n          <input onChange={(e) => setState(e.target.value)\n          } />\n    </Input>\n   \n          </Modal.Content>\n          <Modal.Actions>\n          <Button\n              icon='close'\n              content='Cancel'\n              onClick={() => setAddOpen(false)}\n            />\n            <Button positive\n              icon='check'\n              content='Save'\n              onClick={() => {setAddOpen(false);\n              addRow();}}\n            />\n          </Modal.Actions>\n        </Modal>\n        \n      <Modal\n          onClose={() => setEditOpen(false)}\n          open={editOpen}\n          size='small'\n          style={{ \"height\": \"35%\", \"width\": \"35%\" }}\n        >\n          <Modal.Header>Edit</Modal.Header>\n          <Modal.Content>\n          <Input fluid iconPosition='left'>\n              \n          <input value={state} onChange={(e) => setState(e.target.value)} />\n    </Input>\n    \n          </Modal.Content>\n          <Modal.Actions>\n          <Button\n              icon='close'\n              content='Cancel'\n              onClick={() => setEditOpen(false)}\n            />\n            <Button positive\n              icon='check'\n              content='Save'\n              onClick={() => {setEditOpen(false); editRow();}}\n            />\n          </Modal.Actions>\n        </Modal>\n        \n      <Modal\n          onClose={() => setDeleteOpen(false)}\n          open={deleteOpen}\n          size='small'\n          style={{ \"height\": \"35%\", \"width\": \"25%\" }}\n        >\n          <Modal.Header>Delete</Modal.Header>\n          <Modal.Content>\n            <p>Are you sure you want to delete the {state}?</p>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button  onClick={() => setDeleteOpen(false)} color=\"white\"\n             icon='close' \n             content='Cancel'\n             />\n            <Button onClick={() => {setDeleteOpen(false);\n            deleteRow();}} \n            negative\n           \n             content='Delete'\n             />\n          </Modal.Actions>\n          \n          \n        </Modal>\n        \n      </Modal>\n    </>\n  )\n}\n\n\n\nfunction exampleReducer(state, action) {\n  switch (action.type) {\n    case 'CONFIG_CLOSE_ON_DIMMER_CLICK':\n      return { ...state, closeOnDimmerClick: action.value }\n    case 'CONFIG_CLOSE_ON_ESCAPE':\n      return { ...state, closeOnEscape: action.value }\n    case 'OPEN_MODAL':\n      return { ...state, open: true }\n    case 'CLOSE_MODAL':\n      return { ...state, open: false }\n    default:\n      throw new Error()\n  }\n}\n\nfunction ModalExampleCloseConfig() {\n  const [state, dispatch] = React.useReducer(exampleReducer, {\n    closeOnEscape: true,\n    closeOnDimmerClick: true,\n    open: false,\n    dimmer: undefined,\n  })\n  const { open, closeOnEscape, closeOnDimmerClick } = state\n\n  return (\n    <Grid columns={1}>\n      <Grid.Column>\n        <Checkbox\n          checked={closeOnEscape}\n          label={{ children: <code>closeOnEscape</code> }}\n          onChange={(e, { checked }) =>\n            dispatch({ type: 'CONFIG_CLOSE_ON_ESCAPE', value: checked })\n          }\n        />\n        <br />\n        <Checkbox\n          checked={closeOnDimmerClick}\n          label={{ children: <code>closeOnDimmerClick</code> }}\n          onChange={(e, { checked }) =>\n            dispatch({ type: 'CONFIG_CLOSE_ON_DIMMER_CLICK', value: checked })\n          }\n        />\n      </Grid.Column>\n\n      <Grid.Column>\n        <Modal\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          open={open}\n          onOpen={() => dispatch({ type: 'OPEN_MODAL' })}\n          onClose={() => dispatch({ type: 'CLOSE_MODAL' })}\n          trigger={<Button>Show Modal</Button>}\n        >\n          <Modal.Header>Delete Your Account</Modal.Header>\n          <Modal.Content>\n            <p>Are you sure you want to delete your account</p>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => dispatch({ type: 'CLOSE_MODAL' })} negative>\n              No\n            </Button>\n            <Button onClick={() => dispatch({ type: 'CLOSE_MODAL' })} positive>\n              Yes\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\n","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\JobMain.js",["306","307"],"D:\\GTS_TRACE\\src\\components\\Navbar\\PersonalSubmenu.js",[],"D:\\GTS_TRACE\\src\\components\\Navbar\\activity_submenu.js",[],"D:\\GTS_TRACE\\src\\components\\Navbar\\inventory_submenu.js",[],"D:\\GTS_TRACE\\src\\components\\Navbar\\assets_submenu.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\tableDetails.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\JobDialog.js",["308","309"],"import { Button } from '@mui/material'\nimport React from 'react'\nimport Jobedit from './Jobedit'\nimport Icon from '@mui/material/Icon';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport SampleContextProvider from '../context/SampleContext';\nimport { fontWeight } from '@mui/system';\nimport EyeIcon from 'mdi-react/EyeIcon';\nexport default function JobDialog() {\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (event, reason) => {\n        setOpen(false);\n\n    };\n\n    return (\n        <div>\n           \n                <EyeIcon onClick={handleClickOpen} style={{\"color\":\"grey\", \"cursor\":\"pointer\",\"margin\": \"0px\"}}/>\n        \n            <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" scroll=\"paper\">\n                <DialogTitle sx={{fontSize:24, fontWeight:'large'}}>Job Details</DialogTitle>\n                <DialogContent>\n                <SampleContextProvider>\n                    <Jobedit />\n                </SampleContextProvider>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>DELETE</Button>\n                    <Button onClick={handleClose}>CANCEL</Button>\n                    <Button onClick={handleClose}>SAVE</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\JobDialog.js",["310"],"import { Button } from '@mui/material'\nimport React from 'react'\nimport Jobnew from './Jobnew'\n//import Icon from '@mui/material/Icon';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport SampleContextProvider from '../context/SampleContext';\nimport { Icon} from 'semantic-ui-react';\nimport { fontWeight } from '@mui/system';\nexport default function JobDialog() {\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (event, reason) => {\n        setOpen(false);\n\n    };\n\n    return (\n        <div>\n            \n        <button  onClick={handleClickOpen} class=\"circular ui icon button green\" style={{\"margin-left\": \"20px\"}}> \n     \n <Icon inverted name='white plus'/>\n</button>\n            <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" scroll=\"paper\">\n                <DialogTitle sx={{fontSize:24, fontWeight:'large'}}>Job Details</DialogTitle>\n                <DialogContent><SampleContextProvider>\n                    <Jobnew />\n                </SampleContextProvider>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>CANCEL</Button>\n                    <Button onClick={handleClose}>SAVE</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\context\\SampleContext.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\Jobnew.js",["311","312","313","314","315","316"],"import React from 'react'\nimport { Grid } from '@material-ui/core';\nimport { Useform, Form } from './Useform';\nimport Input from './controls/Input';\nimport Select from './controls/Select';\nimport SelectCheck from './controls/SelectCheck';\nimport *as jobAssign from './services/JobAssign';\nimport Category from './controls/Category';\nimport MyDatePicker from './controls/MyDatePicker';\nimport { Button, Fade, FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport './destxt.css'\nimport { SampleContext } from '../context/SampleContext';\nimport { TextareaAutosize } from '@mui/material';\nimport { border, height } from '@mui/system';\n\n\nconst initialValues = {\n    creator: '',\n    assigned: '',\n    category: '',\n    dueDate: new Date(),\n    priority: '',\n    started: '',\n    completed: '',\n    restartjob: '',\n    description: \"\",\n    notes: \"\",\n}\n\nfunction Jobnew() {\n\n    const {\n        values,\n        setValues,\n        handleInputChange\n    } = Useform(initialValues);\n\n    const { bool, setbool } = React.useContext(SampleContext)\n    const [status, setstatus] = React.useState('');\n    const [startdate, setstartdate] = React.useState('None');\n    const [starttime, setstarttime] = React.useState('');\n    const [enddate, setenddate] = React.useState('None');\n    const [endtime, setendtime] = React.useState('');\n    const [img, setimg] = React.useState();\n    const date = \"\";\n    var d = 3;\n    const [checked, setChecked] = React.useState(false);\n\n    const handleChange = (event) => {\n        setstatus(event.target.value);\n        d = event.target.value;\n        setimg(jobAssign.getStatus()[d - 1].icon);\n        if (d == 3 || (status <= 2 && d > 3)) {\n            const current = new Date();\n            const date = current.toLocaleDateString('en-GB',\n                {\n                    day: '2-digit', month: 'long', year: 'numeric'\n                }).replace(/ /g, ' ');\n            setstartdate(date);\n            setstarttime(current.toLocaleTimeString(\"en-US\",\n                {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                }));\n        }\n        if (d == 5) {\n            const current = new Date();\n            setChecked(true);\n            setbool(true);\n            const date = current.toLocaleDateString('en-GB',\n                {\n                    day: '2-digit', month: 'long', year: 'numeric'\n                }).replace(/ /g, ' ');\n            setenddate(date);\n            setendtime(current.toLocaleTimeString(\"en-US\",\n                {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                }));\n\n        }\n\n    };\n\n    const handleClick = (e) => {\n        setChecked(false);\n        setbool(false);\n        setenddate('None');\n        setendtime('');\n        setstatus(3);\n        setimg(jobAssign.getStatus()[2].icon);\n    }\n\n    return (\n        <Form>\n            <Grid container>\n                <Grid item xs={12} sm={11}>\n                    <Input\n                        name=\"creator\"\n                        label=\"CREATOR\"\n                        value={values.creator}\n                        onChange={handleInputChange}\n                    />\n                    <SelectCheck\n                        name=\"assigned\"\n                        label=\"ASSIGNED\"\n                        value={values.assigned}\n                        onChange={handleInputChange}\n                        restart={bool}\n\n                    />\n                    <br /><br />\n                    <Category\n                        name=\"category\"\n                        label=\"Category\"\n                        value={values.category}\n                        onChange={handleInputChange}\n                        options={jobAssign.getCategory()}\n                        restart={bool}\n                    />\n                    <Grid container spacing={10}>\n                        <Grid item xs={12} sm={5}>\n                            <MyDatePicker\n                                name=\"dueDate\"\n                                label=\"Due Date\"\n                                value={values.dueDate}\n                                onChange={handleInputChange}\n                                restart={bool}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={7}>\n                            <Select\n                                name=\"priority\"\n                                label=\"PRIORITY\"\n                                value={values.priority}\n                                onChange={handleInputChange}\n                                options={jobAssign.getPriority()}\n                                restart={bool}\n                            />\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <Grid container >\n                        <Grid container spacing={2}>\n                            <Grid item xs={6} sm={6}>\n                                <InputLabel>STARTED</InputLabel>\n                                <p>{startdate}</p>\n                                <p>{starttime}</p>\n                            </Grid>\n\n                            <Grid item xs={6} sm={6}>\n                                <InputLabel>COMPLETED</InputLabel>\n                                <p>{enddate}</p>\n                                <p>{endtime}</p>\n                            </Grid>\n                        </Grid>\n                        <br />\n                        <Grid container spacing={0} alignItems=\"center\">\n                            <Grid item xs={0} sm={0} md={0}>\n                                <br />\n                                {img}\n                            </Grid>\n                            <Grid item xs={6} md={6}>\n                                <FormControl\n                                    variant=\"standard\">\n                                    <InputLabel>STATUS</InputLabel>\n                                    <MuiSelect\n                                        label=\"STATUS\"\n                                        name=\"status\"\n                                        value={status}\n                                        onChange={handleChange}\n                                        inputProps={{ readOnly: bool }}>\n                                        {\n                                            jobAssign.getStatus().map(\n                                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                                            )\n                                        }\n                                    </MuiSelect>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={5} md={5}>\n                                <Fade in={checked}>\n                                    <Button variant=\"text\" color=\"primary\" onClick={handleClick}>RE-START JOB</Button>\n                                </Fade>\n                            </Grid>\n                        </Grid>\n                    </Grid >\n                    </Grid>\n            </Grid>\n                    <br />\n                    <div className=\"des\">\n                        <label>DESCRIPTION</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}disabled={bool}/>\n                    <div className=\"des\">\n                        <label>NOTES</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}/>\n        </Form>\n\n    )\n}\n\nexport default Jobnew\n\n","D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\context\\SampleContext.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\Jobedit.js",["317","318","319","320","321","322","323","324"],"import React from 'react'\nimport { Grid } from '@material-ui/core';\nimport { Useform, Form } from './Useform';\nimport Input from './controls/Input';\nimport Select from './controls/Select';\nimport SelectCheck from './controls/SelectCheck';\nimport *as jobAssign from './services/JobAssign';\nimport Category from './controls/Category';\nimport MyDatePicker from './controls/MyDatePicker';\nimport { Button, Fade, FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport './destxt.css'\nimport { SampleContext } from '../context/SampleContext';\nimport { TextareaAutosize } from '@mui/material';\nimport { border, height } from '@mui/system';\nimport PictureAsPdfOutlinedIcon from '@mui/icons-material/PictureAsPdfOutlined';\nimport {Button as MuiButton} from '@mui/material';\nimport CircleOutlined from \"@mui/icons-material/CircleOutlined\";\n\n\n\n\nconst initialValues = {\n    creator: '',\n    assigned: '',\n    category: '',\n    dueDate: new Date(),\n    priority: '',\n    started: '',\n    completed: '',\n    restartjob: '',\n    description: \"Description\",\n    notes: \"Notes\",\n}\n\nfunction Jobedit() {\n\n    const {\n        values,\n        setValues,\n        handleInputChange\n    } = Useform(initialValues);\n\n    const [priority, setPriority] = React.useState(1);\n    const { bool, setbool } = React.useContext(SampleContext)\n    const [status, setstatus] = React.useState(1);\n    const [startdate, setstartdate] = React.useState('None');\n    const [starttime, setstarttime] = React.useState('');\n    const [enddate, setenddate] = React.useState('None');\n    const [endtime, setendtime] = React.useState('');\n    const [img, setimg] = React.useState(<CircleOutlined sx={{ color: \"#0000CD\" }} />);\n    const date = \"\";\n    var d = 3;\n    const [checked, setChecked] = React.useState(false);\n\n    const handleChange = (event) => {\n        setstatus(event.target.value);\n        d = event.target.value;\n        setimg(jobAssign.getStatus()[d - 1].icon);\n        if (d == 3 || (status <= 2 && d > 3)) {\n            const current = new Date();\n            const date = current.toLocaleDateString('en-GB',\n                {\n                    day: '2-digit', month: 'long', year: 'numeric'\n                }).replace(/ /g, ' ');\n            setstartdate(date);\n            setstarttime(current.toLocaleTimeString(\"en-US\",\n                {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                }));\n        }\n        if (d == 5) {\n            const current = new Date();\n            setChecked(true);\n            setbool(true);\n            const date = current.toLocaleDateString('en-GB',\n                {\n                    day: '2-digit', month: 'long', year: 'numeric'\n                }).replace(/ /g, ' ');\n            setenddate(date);\n            setendtime(current.toLocaleTimeString(\"en-US\",\n                {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                }));\n\n        }\n\n    };\n\n    const handleClick = (e) => {\n        setChecked(false);\n        setbool(false);\n        setenddate('None');\n        setendtime('');\n        setstatus(3);\n        setimg(jobAssign.getStatus()[2].icon);\n    }\n\n    return (\n        <Form>\n            <Grid container>\n                <Grid item xs={12} sm={11}>\n                <div className=\"pdf\">\n            <MuiButton >\n            <PictureAsPdfOutlinedIcon color=\"error\" fontSize=\"Large\"/></MuiButton></div>\n            \n\n            <br />\n\n                    <Input\n                        name=\"creator\"\n                        label=\"CREATOR\"\n                        value={values.creator}\n                        onChange={handleInputChange}\n                    />\n                    <SelectCheck\n                        name=\"assigned\"\n                        label=\"ASSIGNED\"\n                        value={values.assigned}\n                        onChange={handleInputChange}\n                        restart={bool}\n\n                    />\n                    <br /><br />\n                    <Category\n                        name=\"category\"\n                        label=\"Category\"\n                        value={values.category}\n                        onChange={handleInputChange}\n                        options={jobAssign.getCategory()}\n                        restart={bool}\n                    />\n                    <Grid container spacing={10}>\n                        <Grid item xs={12} sm={5}>\n                            <MyDatePicker\n                                name=\"dueDate\"\n                                label=\"Due Date\"\n                                value={values.dueDate}\n                                onChange={handleInputChange}\n                                restart={bool}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={7}>\n                            <Select\n                                name=\"priority\"\n                                label=\"PRIORITY\"\n                                value={values.priority || 'Low'}\n                                onChange={handleInputChange}\n                                options={jobAssign.getPriority()}\n                                restart={bool}\n                            />\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <Grid container >\n                        <Grid container spacing={2}>\n                            <Grid item xs={6} sm={6}>\n                                <InputLabel >STARTED</InputLabel>\n                                \n                                <p>{startdate}</p>\n                                <p>{starttime}</p>\n                            </Grid>\n\n                            <Grid item xs={6} sm={6}>\n                                <InputLabel>COMPLETED</InputLabel>\n                                <p>{enddate}</p>\n                                <p>{endtime}</p>\n                            </Grid>\n                        </Grid>\n                        <br />\n                        <Grid container spacing={0} alignItems=\"center\">\n                            <Grid item xs={0} sm={0} md={0}>\n                                <br />\n                                {img}\n                            </Grid>\n                            <Grid item xs={6} md={6}>\n                                <FormControl\n                                    variant=\"standard\">\n                                    <InputLabel>STATUS</InputLabel>\n                                    <MuiSelect\n                                        label=\"STATUS\"\n                                        name=\"status\"\n                                        value={status}\n                                        onChange={handleChange}\n                                        inputProps={{ readOnly: bool }}>\n                                        {\n                                            jobAssign.getStatus().map(\n                                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                                            )\n                                        }\n                                    </MuiSelect>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={5} md={5}>\n                                <Fade in={checked}>\n                                    <Button variant=\"text\" color=\"primary\" onClick={handleClick}>RE-START JOB</Button>\n                                </Fade>\n                            </Grid>\n                        </Grid>\n                    </Grid >\n                    </Grid>\n            </Grid>\n                    <br />\n                    <div className=\"des\">\n                        <label>DESCRIPTION</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}}disabled={bool} value={values.description}/>\n                    <div className=\"des\">\n                        <label>NOTES</label>\n                    </div>\n                    <br />\n                    <TextareaAutosize style={{border:\"none\",outline:\"none\",width:700, height:200}} value={values.notes}/>\n        </Form>\n\n    )\n}\n\nexport default Jobedit\n\n","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\Category.js",["325","326","327","328","329","330","331","332","333","334"],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport { InputLabel, MenuItem, Grid, Select as MuiSelect } from '@material-ui/core';\nimport question from './question mark.png'\n\nexport default function Category(props) {\n    const [open, setOpen] = React.useState(false);\n    const [category, setcategory] = React.useState(\"\");\n    const [cat, setcat] = React.useState({});\n    const [img, setimg] = React.useState(question);\n    const [img1, setimg1] = React.useState(question);\n    var changeCategory = 0;\n    var flag=0;\n    const arr = {};\n    const [field, setfield] = React.useState(\"CATEGORY\")\n    const [fieldfarm, setfieldfarm] = React.useState(\"\")\n    const [subfield, setSubfield] = React.useState('NONE');\n    const [fieldval, setfieldval] = React.useState(\"CATEGORY\")\n    const [subfieldval, setSubfieldval] = React.useState('NONE');\n    const [c, setc] = React.useState({});\n\n    const handleChange = (event, value) => {\n        setcategory(event.target.value);\n        changeCategory = event.target.value;\n        setfieldval(value.props.children)\n        setcat({})\n        flag=0;\n        const arr = options.filter(\n            a => (a.id === changeCategory)\n        )\n        if (changeCategory != \"\") {\n            setc(arr[0].data);\n            setSubfieldval(\"\");\n            setfieldfarm(\"\");\n            setimg1(options[changeCategory - 1].icon);\n        }\n        else{\n            setc({});\n            setfieldval(\"CATEGORY\")\n            setSubfieldval(\"None\");\n            setfieldfarm(\"\");\n            setimg1(question);\n        }\n    };\n\n    const handleChange1 = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        setcat(values => ({ ...values, [name]: value }))\n        console.log(cat);\n        if (name == \"Farm\") {\n            setfieldfarm(value + \" : \");\n            flag=1;\n        }\n        else {\n            setSubfieldval(value);\n        }\n    }\n    const handleClickOpen = () => {\n        if (!restart) {\n            setOpen(true);\n        }\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason !== 'backdropClick') {\n            setOpen(false);\n        }\n    };\n\n    const handleOk = (event, reason) => {\n        if (reason !== 'backdropClick') {\n            if (subfieldval==\"\") {\n                alert(\"No \"+fieldval+\" Selected\")\n            }\n            else{\n                if(fieldfarm!=\"\"){\n                    setfield(fieldval);\n                    setSubfield(fieldfarm + subfieldval);\n                    setimg(img1)\n                    setOpen(false);\n                }\n                else{\n                    if(category==1 ||category==5){\n                        setfield(fieldval);\n                        setSubfield(fieldfarm + subfieldval);\n                        setimg(img1)\n                        setOpen(false);\n                    }\n                }\n            }\n        }\n    };\n\n\n    const { name, label, value, onChange, options, restart } = props;\n    return (\n        <div>\n            <Button color=\"inherit\" onClick={handleClickOpen} size=\"large\" fullWidth=\"true\">\n                <Grid container spacing={0}>\n                    <Grid item xs={0} sm={0} md={0}>\n                        <img src={img} className=\"img\" alt=\"tractor\"></img>\n                    </Grid>\n                    <Grid item xs={6} md={3}>\n                        <InputLabel>{field}</InputLabel>\n                        <p>{subfield}</p>\n                    </Grid>\n                </Grid>\n            </Button>\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle>Job Category</DialogTitle>\n                <DialogContent >\n                    <Box component=\"form\" sx={{ display: 'grid' }}>\n                        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                            <InputLabel>{label}</InputLabel>\n                            <MuiSelect\n                                label={label}\n                                name={name}\n                                value={category}\n                                onChange={handleChange}\n                                displayEmpty>\n                                <MenuItem value=\"\">\n                                    <em>None</em>\n                                </MenuItem>\n                                {\n                                    options.map(\n                                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                                    )\n                                }\n                            </MuiSelect>\n                        </FormControl>\n                        {\n                            Object.entries(c).map(\n                                ([key, val]) => (\n                                    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 420 }}>\n                                        <InputLabel>{key}</InputLabel>\n                                        <MuiSelect\n                                            name={key}\n                                            label={key}\n                                            value={cat[key]}\n                                            onChange={handleChange1}\n                                        >\n                                            {\n                                                val.map(\n                                                    (item, index) => (<MenuItem key={index} value={item}>{item}</MenuItem>)\n                                                )\n                                            }\n                                        </MuiSelect>\n                                    </FormControl>)\n                            )\n                        }\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>CANCEL</Button>\n                    <Button onClick={handleOk}>SAVE</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\MyDatePicker.js",["335"],"import React from 'react'\nimport { KeyboardDatePicker, MuiPickersUtilsProvider ,MobileDatePicker} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\"\n\nexport default function MyDatePicker(props) {\n\n    const { name, label, value, onChange,restart } = props\n\n    const convertToDefEventPara=(name,value)=>({\n        target:{\n            name,value\n        }\n    })\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker disableToolbar variant=\"dialog\" inputVariant=\"standard\" autoOk=\"true\" clearable=\"true\"\n                label={label}\n                format=\"dd/MM/yyyy\"\n                name={name}\n                value={value}\n                onChange={date => onChange(convertToDefEventPara(name,date))}\n                inputProps={{ readOnly:restart }}\n            />\n\n\n        </MuiPickersUtilsProvider>\n    )\n}\n\n","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\SelectCheck.js",["336"],"import React from 'react'\nimport { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Kelly Snyder',\n];\n\nexport default function SelectCheck(props) {\n  const { name, label, value,restart} = props;\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a the stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n  return (\n    <FormControl\n      variant=\"standard\">\n      <InputLabel>{label}</InputLabel>\n      <MuiSelect\n        label={label}\n        multiple\n        name={name}\n        value={personName}\n        onChange={handleChange}\n        renderValue={(selected) => selected.join(', ')}\n        MenuProps={MenuProps}\n        inputProps={{ readOnly:restart }}\n      >\n        {names.map((name) => (\n          <MenuItem key={name} value={name}>\n            <Checkbox checked={personName.indexOf(name) > -1} />\n            <ListItemText primary={name} />\n          </MenuItem>\n        ))}\n      </MuiSelect>\n    </FormControl>\n  )\n}\n","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\Select.js",["337","338"],"import { FormControl, Grid, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport React from 'react'\n\nexport default function Select(props) {\n\n    const { name, label, value, onChange, options,restart } = props;\n    const [img, setimg] = React.useState();\n    const [status, setstatus] = React.useState('');\n    var d = 3;\n\n    const handleChange = (event) => {\n        setstatus(event.target.value);\n        d = event.target.value;\n        setimg(options[d - 1].icon);\n    }\n    return (\n        <Grid container spacing={0} alignItems=\"center\">\n            <Grid item>\n                <br />\n                {img}\n            </Grid>\n            <Grid item xs={12} md={10}>\n                <FormControl\n                    variant=\"standard\">\n                    <InputLabel>{label}</InputLabel>\n                    <MuiSelect\n                        label={label}\n                        name={name}\n                        value={status}\n                        onChange={handleChange}\n                        inputProps={{ readOnly:restart }}>\n                        {\n                            options.map(\n                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                            )\n                        }\n                    </MuiSelect>\n                </FormControl>\n            </Grid>\n        </Grid>\n    )\n}\n","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\services\\JobAssign.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\controls\\Input.js",["339","340"],"import { TextField } from '@material-ui/core'\nimport React from 'react'\n\nfunction Input(props) {\n    const { name, label, value, onChange } = props\n    return (\n        <TextField           \n            variant=\"standard\"\n            name={name}\n            label={label}\n            value=\"JESTEENA JOSE\"\n            InputProps={{\n                readOnly: true,\n              }}\n        />\n    )\n}\n\nexport default Input\n","D:\\GTS_TRACE\\src\\components\\pages\\Job\\NewJob\\JobPopUp\\Useform.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\MyDatePicker.js",["341"],"D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\Category.js",["342","343","344","345","346","347","348","349","350","351"],"D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\SelectCheck.js",["352"],"import React from 'react'\nimport { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Kelly Snyder',\n];\n\nexport default function SelectCheck(props) {\n  const { name, label, value,restart} = props;\n  const [personName, setPersonName] = React.useState(['Oliver Hansen']);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a the stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n  return (\n    <FormControl\n      variant=\"standard\">\n      <InputLabel>{label}</InputLabel>\n      <MuiSelect\n        label={label}\n        multiple\n        name={name}\n        value={personName}\n        onChange={handleChange}\n        renderValue={(selected) => selected.join(', ')}\n        MenuProps={MenuProps}\n        inputProps={{ readOnly:restart }}\n      >\n        {names.map((name) => (\n          <MenuItem key={name} value={name}>\n            <Checkbox checked={personName.indexOf(name) > -1} />\n            <ListItemText primary={name} />\n          </MenuItem>\n        ))}\n      </MuiSelect>\n    </FormControl>\n  )\n}\n","D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\Select.js",["353","354"],"import { FormControl, Grid, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport React from 'react'\n\nexport default function Select(props) {\n\n    const { name, label, value, onChange, options,restart } = props;\n    const [img, setimg] = React.useState();\n    const [status, setstatus] = React.useState(1);\n    var d = 3;\n\n    const handleChange = (event) => {\n        setstatus(event.target.value);\n        d = event.target.value;\n        setimg(options[d - 1].icon);\n    }\n    return (\n        <Grid container spacing={0} alignItems=\"center\">\n            <Grid item>\n                <br />\n                {img}\n            </Grid>\n            <Grid item xs={12} md={10}>\n                <FormControl\n                    variant=\"standard\">\n                    <InputLabel>{label}</InputLabel>\n                    <MuiSelect\n                        label={label}\n                        name={name}\n                        value={status}\n                        onChange={handleChange}\n                        inputProps={{ readOnly:restart }}>\n                        {\n                            options.map(\n                                item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                            )\n                        }\n                    </MuiSelect>\n                </FormControl>\n            </Grid>\n        </Grid>\n    )\n}\n","D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\controls\\Input.js",["355","356"],"import { TextField } from '@material-ui/core'\nimport React from 'react'\n\nfunction Input(props) {\n    const { name, label, value, onChange } = props\n    return (\n        <TextField           \n            variant=\"standard\"\n            name={name}\n            label={label}\n            value=\"Silla\"\n            InputProps={{\n                readOnly: true,\n              }}\n        />\n    )\n}\n\nexport default Input\n","D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\Useform.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\Job\\JobEdit\\JobPopUp\\services\\JobAssign.js",[],"D:\\GTS_TRACE\\src\\Data\\farmData.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\PaddockTable.js",["357","358","359"],"D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\FueltankTable.js",["360","361"],"D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Farms\\SiloTable.js",["362","363"],"D:\\GTS_TRACE\\src\\Data\\EquipmentData.js",[],"D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Equipments\\Equipments.js",["364"],"D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Chemicals\\Chemical.js",["365"],"D:\\GTS_TRACE\\src\\components\\pages\\FarmAssets\\Fertiliser\\FertiliserTable.js",["366"],{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","replacedBy":"370"},{"ruleId":"371","severity":1,"message":"372","line":4,"column":8,"nodeType":"373","messageId":"374","endLine":4,"endColumn":15},{"ruleId":"371","severity":1,"message":"375","line":30,"column":7,"nodeType":"373","messageId":"374","endLine":30,"endColumn":13},{"ruleId":"371","severity":1,"message":"376","line":8,"column":16,"nodeType":"373","messageId":"374","endLine":8,"endColumn":21},{"ruleId":"371","severity":1,"message":"377","line":9,"column":8,"nodeType":"373","messageId":"374","endLine":9,"endColumn":9},{"ruleId":"371","severity":1,"message":"378","line":65,"column":6,"nodeType":"373","messageId":"374","endLine":65,"endColumn":11},{"ruleId":"379","severity":1,"message":"380","line":66,"column":20,"nodeType":"381","messageId":"382","endLine":66,"endColumn":22},{"ruleId":"379","severity":1,"message":"380","line":68,"column":20,"nodeType":"381","messageId":"382","endLine":68,"endColumn":22},{"ruleId":"379","severity":1,"message":"380","line":70,"column":20,"nodeType":"381","messageId":"382","endLine":70,"endColumn":22},{"ruleId":"383","severity":1,"message":"384","line":126,"column":38,"nodeType":"385","messageId":"386","endLine":126,"endColumn":40},{"ruleId":"379","severity":1,"message":"380","line":128,"column":34,"nodeType":"381","messageId":"382","endLine":128,"endColumn":36},{"ruleId":"383","severity":1,"message":"387","line":129,"column":9,"nodeType":"388","messageId":"389","endLine":129,"endColumn":15},{"ruleId":"379","severity":1,"message":"380","line":133,"column":23,"nodeType":"381","messageId":"382","endLine":133,"endColumn":25},{"ruleId":"379","severity":1,"message":"380","line":133,"column":49,"nodeType":"381","messageId":"382","endLine":133,"endColumn":51},{"ruleId":"379","severity":1,"message":"380","line":136,"column":28,"nodeType":"381","messageId":"382","endLine":136,"endColumn":30},{"ruleId":"379","severity":1,"message":"380","line":136,"column":58,"nodeType":"381","messageId":"382","endLine":136,"endColumn":60},{"ruleId":"379","severity":1,"message":"380","line":139,"column":28,"nodeType":"381","messageId":"382","endLine":139,"endColumn":30},{"ruleId":"379","severity":1,"message":"380","line":139,"column":58,"nodeType":"381","messageId":"382","endLine":139,"endColumn":60},{"ruleId":"379","severity":1,"message":"380","line":142,"column":28,"nodeType":"381","messageId":"382","endLine":142,"endColumn":30},{"ruleId":"379","severity":1,"message":"380","line":142,"column":50,"nodeType":"381","messageId":"382","endLine":142,"endColumn":52},{"ruleId":"379","severity":1,"message":"380","line":142,"column":80,"nodeType":"381","messageId":"382","endLine":142,"endColumn":82},{"ruleId":"379","severity":1,"message":"380","line":144,"column":29,"nodeType":"381","messageId":"382","endLine":144,"endColumn":31},{"ruleId":"379","severity":1,"message":"380","line":145,"column":31,"nodeType":"381","messageId":"382","endLine":145,"endColumn":33},{"ruleId":"379","severity":1,"message":"380","line":155,"column":34,"nodeType":"381","messageId":"382","endLine":155,"endColumn":36},{"ruleId":"379","severity":1,"message":"380","line":156,"column":31,"nodeType":"381","messageId":"382","endLine":156,"endColumn":33},{"ruleId":"383","severity":1,"message":"387","line":175,"column":13,"nodeType":"388","messageId":"389","endLine":175,"endColumn":19},{"ruleId":"379","severity":1,"message":"380","line":243,"column":54,"nodeType":"381","messageId":"382","endLine":243,"endColumn":56},{"ruleId":"379","severity":1,"message":"380","line":244,"column":41,"nodeType":"381","messageId":"382","endLine":244,"endColumn":43},{"ruleId":"379","severity":1,"message":"380","line":245,"column":41,"nodeType":"381","messageId":"382","endLine":245,"endColumn":43},{"ruleId":"390","severity":1,"message":"391","line":9,"column":17,"nodeType":"392","endLine":9,"endColumn":81},{"ruleId":"393","severity":1,"message":"394","line":21,"column":5,"nodeType":"392","endLine":21,"endColumn":114},{"ruleId":"393","severity":1,"message":"394","line":24,"column":6,"nodeType":"392","endLine":24,"endColumn":115},{"ruleId":"393","severity":1,"message":"394","line":26,"column":7,"nodeType":"392","endLine":26,"endColumn":116},{"ruleId":"393","severity":1,"message":"394","line":28,"column":7,"nodeType":"392","endLine":28,"endColumn":116},{"ruleId":"395","severity":1,"message":"396","line":6,"column":5,"nodeType":"397","messageId":"398","endLine":28,"endColumn":2},{"ruleId":"371","severity":1,"message":"399","line":1,"column":16,"nodeType":"373","messageId":"374","endLine":1,"endColumn":24},{"ruleId":"371","severity":1,"message":"400","line":2,"column":10,"nodeType":"373","messageId":"374","endLine":2,"endColumn":17},{"ruleId":"371","severity":1,"message":"401","line":1,"column":22,"nodeType":"373","messageId":"374","endLine":1,"endColumn":27},{"ruleId":"371","severity":1,"message":"402","line":12,"column":11,"nodeType":"373","messageId":"374","endLine":12,"endColumn":18},{"ruleId":"371","severity":1,"message":"403","line":4,"column":8,"nodeType":"373","messageId":"374","endLine":4,"endColumn":12},{"ruleId":"371","severity":1,"message":"404","line":188,"column":10,"nodeType":"373","messageId":"374","endLine":188,"endColumn":33},{"ruleId":"371","severity":1,"message":"401","line":1,"column":22,"nodeType":"373","messageId":"374","endLine":1,"endColumn":27},{"ruleId":"371","severity":1,"message":"402","line":12,"column":11,"nodeType":"373","messageId":"374","endLine":12,"endColumn":18},{"ruleId":"371","severity":1,"message":"405","line":4,"column":8,"nodeType":"373","messageId":"374","endLine":4,"endColumn":12},{"ruleId":"371","severity":1,"message":"406","line":10,"column":10,"nodeType":"373","messageId":"374","endLine":10,"endColumn":20},{"ruleId":"371","severity":1,"message":"406","line":11,"column":10,"nodeType":"373","messageId":"374","endLine":11,"endColumn":20},{"ruleId":"371","severity":1,"message":"407","line":14,"column":10,"nodeType":"373","messageId":"374","endLine":14,"endColumn":16},{"ruleId":"371","severity":1,"message":"408","line":14,"column":18,"nodeType":"373","messageId":"374","endLine":14,"endColumn":24},{"ruleId":"371","severity":1,"message":"409","line":34,"column":9,"nodeType":"373","messageId":"374","endLine":34,"endColumn":18},{"ruleId":"371","severity":1,"message":"410","line":45,"column":11,"nodeType":"373","messageId":"374","endLine":45,"endColumn":15},{"ruleId":"379","severity":1,"message":"380","line":53,"column":15,"nodeType":"381","messageId":"382","endLine":53,"endColumn":17},{"ruleId":"379","severity":1,"message":"380","line":66,"column":15,"nodeType":"381","messageId":"382","endLine":66,"endColumn":17},{"ruleId":"371","severity":1,"message":"407","line":14,"column":10,"nodeType":"373","messageId":"374","endLine":14,"endColumn":16},{"ruleId":"371","severity":1,"message":"408","line":14,"column":18,"nodeType":"373","messageId":"374","endLine":14,"endColumn":24},{"ruleId":"371","severity":1,"message":"409","line":39,"column":9,"nodeType":"373","messageId":"374","endLine":39,"endColumn":18},{"ruleId":"371","severity":1,"message":"411","line":43,"column":12,"nodeType":"373","messageId":"374","endLine":43,"endColumn":20},{"ruleId":"371","severity":1,"message":"412","line":43,"column":22,"nodeType":"373","messageId":"374","endLine":43,"endColumn":33},{"ruleId":"371","severity":1,"message":"410","line":51,"column":11,"nodeType":"373","messageId":"374","endLine":51,"endColumn":15},{"ruleId":"379","severity":1,"message":"380","line":59,"column":15,"nodeType":"381","messageId":"382","endLine":59,"endColumn":17},{"ruleId":"379","severity":1,"message":"380","line":72,"column":15,"nodeType":"381","messageId":"382","endLine":72,"endColumn":17},{"ruleId":"371","severity":1,"message":"413","line":19,"column":9,"nodeType":"373","messageId":"374","endLine":19,"endColumn":13},{"ruleId":"371","severity":1,"message":"414","line":20,"column":11,"nodeType":"373","messageId":"374","endLine":20,"endColumn":14},{"ruleId":"379","severity":1,"message":"415","line":37,"column":28,"nodeType":"381","messageId":"382","endLine":37,"endColumn":30},{"ruleId":"379","severity":1,"message":"380","line":57,"column":18,"nodeType":"381","messageId":"382","endLine":57,"endColumn":20},{"ruleId":"379","severity":1,"message":"380","line":79,"column":28,"nodeType":"381","messageId":"382","endLine":79,"endColumn":30},{"ruleId":"379","severity":1,"message":"415","line":83,"column":29,"nodeType":"381","messageId":"382","endLine":83,"endColumn":31},{"ruleId":"379","severity":1,"message":"380","line":90,"column":32,"nodeType":"381","messageId":"382","endLine":90,"endColumn":34},{"ruleId":"379","severity":1,"message":"380","line":90,"column":46,"nodeType":"381","messageId":"382","endLine":90,"endColumn":48},{"ruleId":"371","severity":1,"message":"378","line":102,"column":26,"nodeType":"373","messageId":"374","endLine":102,"endColumn":31},{"ruleId":"371","severity":1,"message":"416","line":102,"column":33,"nodeType":"373","messageId":"374","endLine":102,"endColumn":41},{"ruleId":"371","severity":1,"message":"417","line":2,"column":55,"nodeType":"373","messageId":"374","endLine":2,"endColumn":71},{"ruleId":"371","severity":1,"message":"378","line":28,"column":24,"nodeType":"373","messageId":"374","endLine":28,"endColumn":29},{"ruleId":"371","severity":1,"message":"378","line":6,"column":26,"nodeType":"373","messageId":"374","endLine":6,"endColumn":31},{"ruleId":"371","severity":1,"message":"416","line":6,"column":33,"nodeType":"373","messageId":"374","endLine":6,"endColumn":41},{"ruleId":"371","severity":1,"message":"378","line":5,"column":26,"nodeType":"373","messageId":"374","endLine":5,"endColumn":31},{"ruleId":"371","severity":1,"message":"416","line":5,"column":33,"nodeType":"373","messageId":"374","endLine":5,"endColumn":41},{"ruleId":"371","severity":1,"message":"417","line":2,"column":55,"nodeType":"373","messageId":"374","endLine":2,"endColumn":71},{"ruleId":"371","severity":1,"message":"413","line":19,"column":9,"nodeType":"373","messageId":"374","endLine":19,"endColumn":13},{"ruleId":"371","severity":1,"message":"414","line":20,"column":11,"nodeType":"373","messageId":"374","endLine":20,"endColumn":14},{"ruleId":"379","severity":1,"message":"415","line":37,"column":28,"nodeType":"381","messageId":"382","endLine":37,"endColumn":30},{"ruleId":"379","severity":1,"message":"380","line":57,"column":18,"nodeType":"381","messageId":"382","endLine":57,"endColumn":20},{"ruleId":"379","severity":1,"message":"380","line":79,"column":28,"nodeType":"381","messageId":"382","endLine":79,"endColumn":30},{"ruleId":"379","severity":1,"message":"415","line":83,"column":29,"nodeType":"381","messageId":"382","endLine":83,"endColumn":31},{"ruleId":"379","severity":1,"message":"380","line":90,"column":32,"nodeType":"381","messageId":"382","endLine":90,"endColumn":34},{"ruleId":"379","severity":1,"message":"380","line":90,"column":46,"nodeType":"381","messageId":"382","endLine":90,"endColumn":48},{"ruleId":"371","severity":1,"message":"378","line":102,"column":26,"nodeType":"373","messageId":"374","endLine":102,"endColumn":31},{"ruleId":"371","severity":1,"message":"416","line":102,"column":33,"nodeType":"373","messageId":"374","endLine":102,"endColumn":41},{"ruleId":"371","severity":1,"message":"378","line":28,"column":24,"nodeType":"373","messageId":"374","endLine":28,"endColumn":29},{"ruleId":"371","severity":1,"message":"378","line":6,"column":26,"nodeType":"373","messageId":"374","endLine":6,"endColumn":31},{"ruleId":"371","severity":1,"message":"416","line":6,"column":33,"nodeType":"373","messageId":"374","endLine":6,"endColumn":41},{"ruleId":"371","severity":1,"message":"378","line":5,"column":26,"nodeType":"373","messageId":"374","endLine":5,"endColumn":31},{"ruleId":"371","severity":1,"message":"416","line":5,"column":33,"nodeType":"373","messageId":"374","endLine":5,"endColumn":41},{"ruleId":"371","severity":1,"message":"418","line":8,"column":12,"nodeType":"373","messageId":"374","endLine":8,"endColumn":16},{"ruleId":"371","severity":1,"message":"419","line":8,"column":18,"nodeType":"373","messageId":"374","endLine":8,"endColumn":25},{"ruleId":"420","severity":1,"message":"421","line":32,"column":71,"nodeType":"422","messageId":"382","endLine":32,"endColumn":74},{"ruleId":"371","severity":1,"message":"418","line":8,"column":12,"nodeType":"373","messageId":"374","endLine":8,"endColumn":16},{"ruleId":"371","severity":1,"message":"419","line":8,"column":18,"nodeType":"373","messageId":"374","endLine":8,"endColumn":25},{"ruleId":"371","severity":1,"message":"418","line":8,"column":12,"nodeType":"373","messageId":"374","endLine":8,"endColumn":16},{"ruleId":"371","severity":1,"message":"419","line":8,"column":18,"nodeType":"373","messageId":"374","endLine":8,"endColumn":25},{"ruleId":"390","severity":1,"message":"391","line":79,"column":27,"nodeType":"392","endLine":79,"endColumn":45},{"ruleId":"390","severity":1,"message":"391","line":105,"column":33,"nodeType":"392","endLine":105,"endColumn":51},{"ruleId":"390","severity":1,"message":"391","line":78,"column":25,"nodeType":"392","endLine":78,"endColumn":43},"no-native-reassign",["423"],"no-negated-in-lhs",["424"],"no-unused-vars","'Routing' is defined but never used.","Identifier","unusedVar","'Footer' is assigned a value but never used.","'Label' is defined but never used.","'_' is defined but never used.","'value' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.filter() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","'Segment' is defined but never used.","'Paper' is defined but never used.","'classes' is assigned a value but never used.","'farm' is defined but never used.","'ModalExampleCloseConfig' is defined but never used.","'Icon' is defined but never used.","'fontWeight' is defined but never used.","'border' is defined but never used.","'height' is defined but never used.","'setValues' is assigned a value but never used.","'date' is assigned a value but never used.","'priority' is assigned a value but never used.","'setPriority' is assigned a value but never used.","'flag' is assigned a value but never used.","'arr' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'onChange' is assigned a value but never used.","'MobileDatePicker' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","no-dupe-keys","Duplicate key 'D'.","ObjectExpression","no-global-assign","no-unsafe-negation"]