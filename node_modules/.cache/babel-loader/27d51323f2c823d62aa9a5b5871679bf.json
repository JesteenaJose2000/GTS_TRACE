{"ast":null,"code":"var _jsxFileName = \"D:\\\\GTS_TRACE\\\\src\\\\components\\\\pages\\\\FarmAssets\\\\Farms\\\\WaterStorageTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WaterStorageTable() {\n  _s();\n\n  const [data, setData] = React.useState([{\n    name: 'xv',\n    capacity: '23',\n    cunit: '2',\n    surface: '10',\n    sunit: '1',\n    depth: '23',\n    dunit: '5',\n    slop: 3,\n    notes: 'xcvb'\n  }, {\n    name: 'K2K',\n    capacity: '50',\n    cunit: '3',\n    surface: '23',\n    sunit: '0',\n    depth: '23',\n    dunit: '4',\n    slop: 2,\n    notes: 'sdfgh'\n  }, {\n    name: 'oiuy',\n    capacity: '40',\n    cunit: '1',\n    surface: '40',\n    sunit: '3',\n    depth: '23',\n    dunit: '1',\n    slop: 8,\n    notes: 'cvbn'\n  }, {\n    name: 'sdfgh',\n    capacity: '10',\n    cunit: '4',\n    surface: '2',\n    sunit: '2',\n    depth: '23',\n    dunit: '3',\n    slop: 7,\n    notes: 'jhgfd'\n  }]);\n  const columns = [{\n    title: 'Name',\n    field: 'name'\n  }, {\n    title: 'Capacity',\n    field: 'capacity',\n    type: 'numeric'\n  }, {\n    title: 'Unit',\n    field: 'cunit',\n    lookup: {\n      '0': 'Litres',\n      '1': 'Gallons',\n      '4': 'Cubic metre',\n      '2': 'Cubic feet',\n      '3': 'Cubic yard'\n    }\n  }, {\n    title: 'Surface Area',\n    field: 'surface',\n    type: 'numeric'\n  }, {\n    title: 'Unit',\n    field: 'sunit',\n    lookup: {\n      '3': 'Hectares',\n      '2': 'Acres',\n      '1': 'Square metre',\n      '0': 'Square feet'\n    }\n  }, {\n    title: 'Max Depth ',\n    field: 'depth',\n    type: 'numeric'\n  }, {\n    title: 'Unit',\n    field: 'dunit',\n    lookup: {\n      '0': 'mm',\n      '1': 'cm',\n      '5': 'metre',\n      '2': 'inch',\n      '3': 'feet',\n      '4': 'yard'\n    }\n  }, {\n    title: 'Slop factor',\n    field: 'slop',\n    type: 'numeric'\n  }, {\n    title: 'Notes',\n    field: 'notes'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Water Storages\",\n      data: data,\n      columns: columns,\n      editable: {\n        onRowAdd: newData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            setData([...data, newData]);\n            resolve();\n          }, 1000);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataUpdate = [...data];\n            const index = oldData.tableData.id;\n            dataUpdate[index] = newData;\n            setData([...dataUpdate]);\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1,\n        filtering: true,\n        paging: true,\n        pageSizeOptions: [2, 5, 10, 15, 20],\n        paginationType: \"stepped\",\n        showFirstLastPageButtons: false\n      },\n      icons: {\n        Add: () => /*#__PURE__*/_jsxDEV(AddCircleRoundedIcon, {\n          fontSize: \"large\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 30\n        }, this),\n        Edit: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 31\n        }, this),\n        Delete: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WaterStorageTable, \"h471KvDiKmQFL09ZB5g3qAXXKuI=\");\n\n_c = WaterStorageTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"WaterStorageTable\");","map":{"version":3,"sources":["D:/GTS_TRACE/src/components/pages/FarmAssets/Farms/WaterStorageTable.js"],"names":["React","MaterialTable","CreateIcon","AddCircleRoundedIcon","DeleteIcon","WaterStorageTable","data","setData","useState","name","capacity","cunit","surface","sunit","depth","dunit","slop","notes","columns","title","field","type","lookup","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","actionsColumnIndex","filtering","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","Add","Edit","Delete"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nexport default function WaterStorageTable() {\r\n  \r\n    \r\n\r\n    const [data, setData] = React.useState([\r\n      { name: 'xv', capacity: '23', cunit:'2',surface: '10', sunit:'1',depth: '23', dunit:'5', slop: 3, notes: 'xcvb' },\r\n      { name: 'K2K', capacity: '50', cunit:'3', surface: '23', sunit:'0',depth: '23', dunit:'4',slop: 2, notes: 'sdfgh' },\r\n      { name: 'oiuy', capacity: '40', cunit:'1', surface: '40', sunit:'3',depth: '23', dunit:'1',slop: 8, notes: 'cvbn' },\r\n      { name: 'sdfgh', capacity: '10', cunit:'4', surface: '2', sunit:'2',depth: '23', dunit:'3',slop: 7, notes: 'jhgfd' }\r\n       ])\r\n  const columns = [{\r\n      title: 'Name', field: 'name'\r\n  },\r\n  {\r\n      title: 'Capacity', field: 'capacity', type: 'numeric',\r\n  },\r\n  {\r\n      title: 'Unit', field: 'cunit',\r\n      lookup: { '0': 'Litres',  '1': 'Gallons', '4':'Cubic metre', '2':'Cubic feet','3':'Cubic yard'},\r\n  },{\r\n    title: 'Surface Area', field: 'surface', type: 'numeric',\r\n},\r\n{\r\n    title: 'Unit', field: 'sunit',\r\n    lookup: { '3': 'Hectares', '2': 'Acres', '1':'Square metre', '0':'Square feet'},\r\n},{\r\n  title: 'Max Depth ', field: 'depth', type: 'numeric',\r\n  \r\n},\r\n{\r\n  title: 'Unit', field: 'dunit',\r\n  lookup: { '0': 'mm', '1':'cm', '5':'metre', '2': 'inch', '3':'feet', '4':'yard'},\r\n}, {\r\n      title: 'Slop factor', field: 'slop', type: 'numeric', \r\n      \r\n  }, {\r\n      title: 'Notes', field: 'notes',\r\n    \r\n  }]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"Water Storages\"\r\n                data={data}\r\n                columns={columns}\r\n                editable={{\r\n                \r\n                        onRowAdd: newData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              setData([...data, newData]);\r\n              \r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n              setData([...dataUpdate]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n          \r\n        onRowDelete: oldData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n              \r\n              resolve()\r\n            }, 1000)\r\n          }),\r\n                }}\r\n               \r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    filtering: true,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                }}\r\n                icons={{\r\n                 \r\n                  Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n                  Edit: () => <CreateIcon color=\"action\" />,\r\n                  Delete: () => <DeleteIcon color=\"action\" />\r\n                }}\r\n            /> \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}