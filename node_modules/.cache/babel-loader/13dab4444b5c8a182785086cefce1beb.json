{"ast":null,"code":"var _jsxFileName = \"D:\\\\GTS_TRACE\\\\src\\\\components\\\\pages\\\\FarmAssets\\\\Farms\\\\WaterStorageTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport CreateIcon from '@mui/icons-material/Create';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WaterStorageTable() {\n  _s();\n\n  const [data, setData] = React.useState([{\n    name: 'Linta Paddock',\n    capacity: '23',\n    cunit: 'm3',\n    surface: '10',\n    sunit: 'm2',\n    depth: '23',\n    dunit: 'm3',\n    slop: 'fallow',\n    notes: 'N'\n  }, {\n    name: 'K2K Paddock',\n    capacity: '50',\n    cunit: 'f3',\n    surface: '23',\n    sunit: 'f2',\n    depth: '23',\n    dunit: 'm3',\n    slop: 'dfg',\n    notes: 'C'\n  }, {\n    name: 'Harry Woods Paddock',\n    capacity: '40',\n    cunit: 'kl',\n    surface: '40',\n    sunit: 'm2',\n    depth: '23',\n    dunit: 'm3',\n    slop: 'abc',\n    notes: 'T'\n  }, {\n    name: 'Peter Dein Co.',\n    capacity: '10',\n    cunit: 'Ml',\n    surface: '2',\n    sunit: 'ha',\n    depth: '23',\n    dunit: 'm3',\n    slop: 'abc',\n    notes: 'TS'\n  }]);\n  const columns = [{\n    title: 'Name',\n    field: 'name'\n  }, {\n    title: 'Capacity',\n    field: 'capacity',\n    type: 'numeric'\n  }, {\n    title: 'Unit',\n    field: 'cunit',\n    lookup: {\n      'l': 'Litres',\n      'kl': 'Kilolitres',\n      'Ml': 'Megalitres',\n      'G': 'Gallons',\n      'm3': 'Cubic metre',\n      'f3': 'Cubic feet',\n      'y3': 'Cubic yard'\n    }\n  }, {\n    title: 'Surface Area',\n    field: 'surface',\n    type: 'numeric'\n  }, {\n    title: 'Unit',\n    field: 'sunit',\n    lookup: {\n      'ha': 'Hectares',\n      'ac': 'Acres',\n      'm2': 'Square metre',\n      'f2': 'Square feet'\n    }\n  }, {\n    title: 'Max Depth ',\n    field: 'depth',\n    type: 'numeric'\n  }, {\n    title: 'Unit',\n    field: 'dunit',\n    lookup: {\n      'ha': 'Hectares',\n      'ac': 'Acres',\n      'm2': 'Square metre',\n      'f2': 'Square feet'\n    }\n  }, {\n    title: 'slop',\n    field: 'slop',\n    type: 'numeric'\n  }, {\n    title: 'notes',\n    field: 'notes'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Silos\",\n      data: data,\n      columns: columns,\n      editable: {\n        onRowAdd: newData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            setData([...data, newData]);\n            resolve();\n          }, 1000);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataUpdate = [...data];\n            const index = oldData.tableData.id;\n            dataUpdate[index] = newData;\n            setData([...dataUpdate]);\n            resolve();\n          }, 1000);\n        }),\n        onRowDelete: oldData => new Promise((resolve, reject) => {\n          setTimeout(() => {\n            const dataDelete = [...data];\n            const index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData([...dataDelete]);\n            resolve();\n          }, 1000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1,\n        filtering: true,\n        paging: true,\n        pageSizeOptions: [2, 5, 10, 15, 20],\n        paginationType: \"stepped\",\n        showFirstLastPageButtons: false\n      },\n      icons: {\n        Add: () => /*#__PURE__*/_jsxDEV(AddCircleRoundedIcon, {\n          fontSize: \"large\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 30\n        }, this),\n        Edit: () => /*#__PURE__*/_jsxDEV(CreateIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 31\n        }, this),\n        Delete: () => /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WaterStorageTable, \"kTbmr+/8BVuaU6cvJHV6Z9SqST0=\");\n\n_c = WaterStorageTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"WaterStorageTable\");","map":{"version":3,"sources":["D:/GTS_TRACE/src/components/pages/FarmAssets/Farms/WaterStorageTable.js"],"names":["React","MaterialTable","CreateIcon","AddCircleRoundedIcon","DeleteIcon","WaterStorageTable","data","setData","useState","name","capacity","cunit","surface","sunit","depth","dunit","slop","notes","columns","title","field","type","lookup","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","actionsColumnIndex","filtering","paging","pageSizeOptions","paginationType","showFirstLastPageButtons","Add","Edit","Delete"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport CreateIcon from '@mui/icons-material/Create';\r\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nexport default function WaterStorageTable() {\r\n  \r\n    \r\n\r\n    const [data, setData] = React.useState([\r\n      { name: 'Linta Paddock', capacity: '23', cunit:'m3',surface: '10', sunit:'m2',depth: '23', dunit:'m3', slop: 'fallow', notes: 'N' },\r\n      { name: 'K2K Paddock', capacity: '50', cunit:'f3', surface: '23', sunit:'f2',depth: '23', dunit:'m3',slop: 'dfg', notes: 'C' },\r\n      { name: 'Harry Woods Paddock', capacity: '40', cunit:'kl', surface: '40', sunit:'m2',depth: '23', dunit:'m3',slop: 'abc', notes: 'T' },\r\n      { name: 'Peter Dein Co.', capacity: '10', cunit:'Ml', surface: '2', sunit:'ha',depth: '23', dunit:'m3',slop: 'abc', notes: 'TS' }\r\n       ])\r\n  const columns = [{\r\n      title: 'Name', field: 'name'\r\n  },\r\n  {\r\n      title: 'Capacity', field: 'capacity', type: 'numeric',\r\n  },\r\n  {\r\n      title: 'Unit', field: 'cunit',\r\n      lookup: { 'l': 'Litres', 'kl': 'Kilolitres', 'Ml': 'Megalitres', 'G': 'Gallons', 'm3':'Cubic metre', 'f3':'Cubic feet','y3':'Cubic yard'},\r\n  },{\r\n    title: 'Surface Area', field: 'surface', type: 'numeric',\r\n},\r\n{\r\n    title: 'Unit', field: 'sunit',\r\n    lookup: { 'ha': 'Hectares', 'ac': 'Acres', 'm2':'Square metre', 'f2':'Square feet'},\r\n},{\r\n  title: 'Max Depth ', field: 'depth', type: 'numeric',\r\n  \r\n},\r\n{\r\n  title: 'Unit', field: 'dunit',\r\n  lookup: { 'ha': 'Hectares', 'ac': 'Acres', 'm2':'Square metre', 'f2':'Square feet'},\r\n}, {\r\n      title: 'slop', field: 'slop', type: 'numeric', \r\n      \r\n  }, {\r\n      title: 'notes', field: 'notes',\r\n    \r\n  }]\r\n    return (\r\n        <div>\r\n            <MaterialTable title=\"Silos\"\r\n                data={data}\r\n                columns={columns}\r\n                editable={{\r\n                \r\n                        onRowAdd: newData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              setData([...data, newData]);\r\n              \r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n              setData([...dataUpdate]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n          \r\n        onRowDelete: oldData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n              \r\n              resolve()\r\n            }, 1000)\r\n          }),\r\n                }}\r\n               \r\n                options={{\r\n                    actionsColumnIndex: -1,\r\n                    filtering: true,\r\n                    paging: true,\r\n                    pageSizeOptions: [2, 5, 10, 15, 20],\r\n                    paginationType: \"stepped\",\r\n                    showFirstLastPageButtons: false,\r\n                }}\r\n                icons={{\r\n                 \r\n                  Add: () => <AddCircleRoundedIcon fontSize=\"large\" color=\"primary\" />,\r\n                  Edit: () => <CreateIcon color=\"action\" />,\r\n                  Delete: () => <DeleteIcon color=\"action\" />\r\n                }}\r\n            /> \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}